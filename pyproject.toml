[tool.poetry]
name = "textrig"
version = "0.0.1"
description = "An open and collaborative text research platform"
readme = "README.md"
repository = "https://github.com/VedaWebProject/TextRig"
documentation = "https://github.com/VedaWebProject/TextRig"
keywords = ["text", "research", "platform", "collaboration"]
authors = ["BÃ¶rge Kiss <bkis@bkis.github.io>"]
license = "AGPL-3.0-or-later"
classifiers = [
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Development Status :: 1 - Planning",
]

[tool.poetry.urls]
"Research Project Website" = "https://vedaweb.uni-koeln.de"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.78"

[tool.poetry.dev-dependencies]
pytest = "^7.1"
isort = "^5.10"
black = "^22.3"
pytest_cov = "^3.0"
pyproject_flake8 = "0.0.1a4"

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E501"]
select = ["C", "E", "F", "W", "B", "B950"]
extend-exclude = [
    ".pytest_cache",
    "docs/",
    "build/",
    "dist/",
    ".venv",
]

[tool.isort]
profile = "black"
line_length = 88
src_paths = ["src", "tests"]

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=textrig --cov-config=.coveragerc"

[tool.poe.tasks]

    [tool.poe.tasks.format]
    help = "Run black to format code base"
    cmd = "black ."

    [tool.poe.tasks.style]
    help = "Check code style using black"
    cmd = "black . --check --diff"

    [tool.poe.tasks.isort]
    help = "Run isort to sort imports"
    cmd = "isort ."

    [tool.poe.tasks.isort-check]
    help = "Check import order using isort"
    cmd = "isort . --check --diff"

    [tool.poe.tasks.lint]
    help = "Run flake8 linter"
    cmd = "pflake8 ."

    [tool.poe.tasks.test]
    help = "Run test suite with pytest"
    cmd = "pytest"

    [tool.poe.tasks.run]
    help = "Run the application"
    cmd = "poetry run python textrig"

    [tool.poe.tasks.pretty]
    help = "Format code and sort imports in one go"
    sequence = ["format", "isort"]

    [tool.poe.tasks.check]
    help = "Run all checks on code base: tests, code style, import order"
    sequence = ["test", "style", "isort-check"]

    [tool.poe.tasks.clean]
    help = "Cleanup of generated files (won't work on Windows)"
    interpreter = ["bash", "zsh"]
    shell = """
        shopt -s globstar
        rm -rf \
            **/__pycache__ \
            .pytest_cache \
            .coverage \
            dist \
            htmlcov \
    """

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
