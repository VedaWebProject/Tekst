{
  "openapi": "3.1.0",
  "info": {
    "title": "Tekst-Dev",
    "summary": "An online text research platform",
    "contact": {},
    "version": "0.9.0a0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1/api"
    }
  ],
  "paths": {
    "/bookmarks/{id}": {
      "delete": {
        "tags": [
          "bookmarks"
        ],
        "summary": "Delete bookmark",
        "operationId": "deleteBookmark",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bookmarks": {
      "get": {
        "tags": [
          "bookmarks"
        ],
        "summary": "Get user bookmarks",
        "description": "Returns all bookmarks that belong to the requesting user",
        "operationId": "getUserBookmarks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/BookmarkRead"
                  },
                  "type": "array",
                  "title": "Response Get User Bookmarks Bookmarks Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "bookmarks"
        ],
        "summary": "Create bookmark",
        "description": "Creates a bookmark for the requesting user",
        "operationId": "createBookmark",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkRead"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/browse/context": {
      "get": {
        "tags": [
          "browse"
        ],
        "summary": "Get content context",
        "description": "Returns a list of all resource contents belonging to the resource\nwith the given ID, associated to locations that are children of the parent location\nwith the given ID.",
        "operationId": "getContentContext",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "res",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "ID of resource the requested contents belong to",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Res"
            },
            "description": "ID of resource the requested contents belong to"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of parent location to get child contents for",
              "title": "Parent"
            },
            "description": "ID of parent location to get child contents for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApiCallContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/AudioContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/ExternalReferencesContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/ImagesContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/LocationMetadataContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/PlainTextContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/RichTextContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/TextAnnotationContentRead"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "resourceType",
                      "mapping": {
                        "apiCall": "#/components/schemas/ApiCallContentRead",
                        "audio": "#/components/schemas/AudioContentRead",
                        "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                        "images": "#/components/schemas/ImagesContentRead",
                        "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                        "plainText": "#/components/schemas/PlainTextContentRead",
                        "richText": "#/components/schemas/RichTextContentRead",
                        "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                      }
                    }
                  },
                  "title": "Response Get Content Context Browse Context Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/browse": {
      "get": {
        "tags": [
          "browse"
        ],
        "summary": "Get location data",
        "description": "Returns the location path from the location with the given ID or text/level/position\nas the last element, up to its most distant ancestor location\non structure level 0 as the first element of an array as well as all contents\nfor the given resource(s) referencing the locations in the location path.",
        "operationId": "getLocationData",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of location to request data for",
              "title": "Id"
            },
            "description": "ID of location to request data for"
          },
          {
            "name": "txt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of text the target location belongs to (needed if no location ID is given)",
              "title": "Txt"
            },
            "description": "ID of text the target location belongs to (needed if no location ID is given)"
          },
          {
            "name": "lvl",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Location level (only used if no location ID is given, text's default level is used by default)",
              "title": "Lvl"
            },
            "description": "Location level (only used if no location ID is given, text's default level is used by default)"
          },
          {
            "name": "pos",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Location position (only used if no location ID is given)",
              "default": 0,
              "title": "Pos"
            },
            "description": "Location position (only used if no location ID is given)"
          },
          {
            "name": "res",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              "description": "List of IDs of resources to return contents for (assumes all if none are given)",
              "default": [],
              "title": "Res"
            },
            "description": "List of IDs of resources to return contents for (assumes all if none are given)"
          },
          {
            "name": "head",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only return contents for the head location of the path",
              "default": false,
              "title": "Head"
            },
            "description": "Only return contents for the head location of the path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationData"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/browse/nearest-content-location": {
      "get": {
        "tags": [
          "browse"
        ],
        "summary": "Get nearest content location",
        "description": "Finds the nearest location the given resource holds content for and returns it.",
        "operationId": "getNearestContentLocation",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "loc",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "ID of the location to start from",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Loc"
            },
            "description": "ID of the location to start from"
          },
          {
            "name": "res",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "ID of resource to return nearest location with content for",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Res"
            },
            "description": "ID of resource to return nearest location with content for"
          },
          {
            "name": "dir",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "before",
                "after"
              ],
              "type": "string",
              "description": "Whether to look for the nearest preceding (before) or subsequent (after) location with content",
              "default": "after",
              "title": "Dir"
            },
            "description": "Whether to look for the nearest preceding (before) or subsequent (after) location with content"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contents": {
      "post": {
        "tags": [
          "contents"
        ],
        "summary": "Create content",
        "operationId": "createContent",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/AudioContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/ExternalReferencesContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/ImagesContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/LocationMetadataContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/PlainTextContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/RichTextContentCreate"
                  },
                  {
                    "$ref": "#/components/schemas/TextAnnotationContentCreate"
                  }
                ],
                "discriminator": {
                  "propertyName": "resourceType",
                  "mapping": {
                    "apiCall": "#/components/schemas/ApiCallContentCreate",
                    "audio": "#/components/schemas/AudioContentCreate",
                    "externalReferences": "#/components/schemas/ExternalReferencesContentCreate",
                    "images": "#/components/schemas/ImagesContentCreate",
                    "locationMetadata": "#/components/schemas/LocationMetadataContentCreate",
                    "plainText": "#/components/schemas/PlainTextContentCreate",
                    "richText": "#/components/schemas/RichTextContentCreate",
                    "textAnnotation": "#/components/schemas/TextAnnotationContentCreate"
                  }
                },
                "title": "Content"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationContentRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallContentRead",
                      "audio": "#/components/schemas/AudioContentRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                      "images": "#/components/schemas/ImagesContentRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                      "plainText": "#/components/schemas/PlainTextContentRead",
                      "richText": "#/components/schemas/RichTextContentRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                    }
                  },
                  "title": "Response Create Content Contents Post"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "contents"
        ],
        "summary": "Find contents",
        "description": "Returns a list of all resource contents matching the given criteria.\n\nRespects restricted resources and inactive texts.\nAs the resulting list may contain contents of different types, the\nreturned content objects cannot be typed to their precise resource content type.",
        "operationId": "findContents",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "res",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              "description": "ID (or list of IDs) of resource(s) to return content data for",
              "default": [],
              "title": "Res"
            },
            "description": "ID (or list of IDs) of resource(s) to return content data for"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              "description": "ID (or list of IDs) of location(s) to return content data for",
              "default": [],
              "title": "Location"
            },
            "description": "ID (or list of IDs) of location(s) to return content data for"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Return at most <limit> items",
              "default": 4096,
              "title": "Limit"
            },
            "description": "Return at most <limit> items"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApiCallContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/AudioContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/ExternalReferencesContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/ImagesContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/LocationMetadataContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/PlainTextContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/RichTextContentRead"
                      },
                      {
                        "$ref": "#/components/schemas/TextAnnotationContentRead"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "resourceType",
                      "mapping": {
                        "apiCall": "#/components/schemas/ApiCallContentRead",
                        "audio": "#/components/schemas/AudioContentRead",
                        "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                        "images": "#/components/schemas/ImagesContentRead",
                        "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                        "plainText": "#/components/schemas/PlainTextContentRead",
                        "richText": "#/components/schemas/RichTextContentRead",
                        "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                      }
                    }
                  },
                  "title": "Response Find Contents Contents Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/contents/{id}": {
      "get": {
        "tags": [
          "contents"
        ],
        "summary": "Get content",
        "description": "A generic route for retrieving a content by ID from the database",
        "operationId": "getContent",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationContentRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallContentRead",
                      "audio": "#/components/schemas/AudioContentRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                      "images": "#/components/schemas/ImagesContentRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                      "plainText": "#/components/schemas/PlainTextContentRead",
                      "richText": "#/components/schemas/RichTextContentRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                    }
                  },
                  "title": "Response Get Content Contents  Id  Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "contents"
        ],
        "summary": "Update content",
        "operationId": "updateContent",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/AudioContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/ExternalReferencesContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/ImagesContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/LocationMetadataContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/PlainTextContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/RichTextContentUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/TextAnnotationContentUpdate"
                  }
                ],
                "discriminator": {
                  "propertyName": "resourceType",
                  "mapping": {
                    "apiCall": "#/components/schemas/ApiCallContentUpdate",
                    "audio": "#/components/schemas/AudioContentUpdate",
                    "externalReferences": "#/components/schemas/ExternalReferencesContentUpdate",
                    "images": "#/components/schemas/ImagesContentUpdate",
                    "locationMetadata": "#/components/schemas/LocationMetadataContentUpdate",
                    "plainText": "#/components/schemas/PlainTextContentUpdate",
                    "richText": "#/components/schemas/RichTextContentUpdate",
                    "textAnnotation": "#/components/schemas/TextAnnotationContentUpdate"
                  }
                },
                "title": "Updates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextContentRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationContentRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallContentRead",
                      "audio": "#/components/schemas/AudioContentRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                      "images": "#/components/schemas/ImagesContentRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                      "plainText": "#/components/schemas/PlainTextContentRead",
                      "richText": "#/components/schemas/RichTextContentRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                    }
                  },
                  "title": "Response Update Content Contents  Id  Patch"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "contents"
        ],
        "summary": "Delete content",
        "operationId": "deleteContent",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/corrections": {
      "post": {
        "tags": [
          "corrections"
        ],
        "summary": "Create correction",
        "description": "Creates a correction note referring to a specific content",
        "operationId": "createCorrection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CorrectionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CorrectionRead"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/corrections/{resourceId}": {
      "get": {
        "tags": [
          "corrections"
        ],
        "summary": "Get corrections",
        "description": "Returns a list of all corrections for a specific resource",
        "operationId": "getCorrections",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Resourceid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CorrectionRead"
                  },
                  "title": "Response Get Corrections Corrections  Resourceid  Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/corrections/{id}": {
      "delete": {
        "tags": [
          "corrections"
        ],
        "summary": "Delete correction",
        "description": "Deletes a specific correction note",
        "operationId": "deleteCorrection",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Create location",
        "description": "Creates a new location. The position will be automatically set to the last position\nof the location's parent (or the first parent before that has children).",
        "operationId": "createLocation",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationRead"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Find locations",
        "description": "Finds locations by various combinations of location properties.\nA full combined label including all parent location's labels is added to each\nreturned location object if add_full_labels is set to true.",
        "operationId": "findLocations",
        "parameters": [
          {
            "name": "locId",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of location to find",
              "title": "Locid"
            },
            "description": "ID of location to find"
          },
          {
            "name": "parentId",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of parent location to find children of",
              "title": "Parentid"
            },
            "description": "ID of parent location to find children of"
          },
          {
            "name": "textId",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of text to find locations for",
              "title": "Textid"
            },
            "description": "ID of text to find locations for"
          },
          {
            "name": "textSlug",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16,
                  "pattern": "^[a-z0-9]+$",
                  "description": "A short identifier for use in URLs and internal operations"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Slug of text to find locations for",
              "title": "Textslug"
            },
            "description": "Slug of text to find locations for"
          },
          {
            "name": "lvl",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "maximum": 32,
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Structure level to find locations for",
              "title": "Lvl"
            },
            "description": "Structure level to find locations for"
          },
          {
            "name": "pos",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Position value of locations to find",
              "title": "Pos"
            },
            "description": "Position value of locations to find"
          },
          {
            "name": "alias",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "null"
                },
                {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 32
                }
              ],
              "description": "Alias of location(s) to find",
              "title": "Alias"
            },
            "description": "Alias of location(s) to find"
          },
          {
            "name": "fullLabels",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Add full combined label to each location",
              "default": false,
              "title": "Fulllabels"
            },
            "description": "Add full combined label to each location"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Return at most <limit> locations",
              "default": 100,
              "title": "Limit"
            },
            "description": "Return at most <limit> locations"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationRead"
                  },
                  "title": "Response Find Locations Locations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/path-options/{by}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get path options by head id",
        "description": "Returns the options for selecting text locations derived from the location path of\nthe location with the given ID as head or root.",
        "operationId": "getPathOptionsByHeadId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "Location ID",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            },
            "description": "Location ID"
          },
          {
            "name": "by",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "root",
                "head"
              ],
              "type": "string",
              "description": "Wheter to handle the given location as path root or head",
              "title": "By"
            },
            "description": "Wheter to handle the given location as path root or head"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationRead"
                    }
                  },
                  "title": "Response Get Path Options By Head Id Locations  Id  Path Options  By  Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/first-last-paths": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get first and last locations paths",
        "operationId": "getFirstAndLastLocationsPaths",
        "parameters": [
          {
            "name": "txt",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "Target text ID",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Txt"
            },
            "description": "Target text ID"
          },
          {
            "name": "lvl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Structure level to find first and last locations for",
              "default": 0,
              "title": "Lvl"
            },
            "description": "Structure level to find first and last locations for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LocationRead"
                    }
                  },
                  "minItems": 2,
                  "maxItems": 2,
                  "title": "Response Get First And Last Locations Paths Locations First Last Paths Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/children": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get children",
        "operationId": "getChildren",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "txt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of text to find locations for (required if no parent ID is given)",
              "title": "Txt"
            },
            "description": "ID of text to find locations for (required if no parent ID is given)"
          },
          {
            "name": "parent",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of parent location to find children of",
              "title": "Parent"
            },
            "description": "ID of parent location to find children of"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 8192,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LocationRead"
                  },
                  "title": "Response Get Children Locations Children Get"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Get location",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "locations"
        ],
        "summary": "Update location",
        "operationId": "updateLocation",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "locations"
        ],
        "summary": "Delete location",
        "description": "Deletes the specified location. Also deletes any associated contents,\nchild locations and contents associated with child locations.",
        "operationId": "deleteLocation",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLocationResult"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/move": {
      "post": {
        "tags": [
          "locations"
        ],
        "summary": "Move location",
        "description": "Moves the specified location to a new position on its level.",
        "operationId": "moveLocation",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveLocationRequestBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Send message",
        "description": "Creates a message for the specified recipient",
        "operationId": "sendMessage",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMessageCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserMessageRead"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get thread messages",
        "description": "Returns all messages belonging to the specified thread",
        "operationId": "getThreadMessages",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "thread",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the thread to return messages for",
              "title": "Thread"
            },
            "description": "ID of the thread to return messages for"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserMessageRead"
                  },
                  "title": "Response Get Thread Messages Messages Get"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/messages/threads": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Get threads",
        "description": "Returns all message threads involving the requesting user",
        "operationId": "getThreads",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UserMessageThread"
                  },
                  "type": "array",
                  "title": "Response Get Threads Messages Threads Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/messages/threads/{id}": {
      "delete": {
        "tags": [
          "messages"
        ],
        "summary": "Delete thread",
        "description": "Marks all received messages from the given user as deleted or actually deletes them,\ndepending on the current deletion status",
        "operationId": "deleteThread",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "const": "system",
                  "type": "string"
                }
              ],
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/platform": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Get platform data",
        "description": "Returns data the client needs to initialize",
        "operationId": "getPlatformData",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformData"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/platform/state": {
      "patch": {
        "tags": [
          "platform"
        ],
        "summary": "Update platform state",
        "operationId": "updatePlatformState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlatformStateUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlatformStateRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/platform/segments/{id}": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Get segment",
        "operationId": "getSegment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSegmentRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "platform"
        ],
        "summary": "Update segment",
        "operationId": "updateSegment",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientSegmentUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSegmentRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "platform"
        ],
        "summary": "Delete segment",
        "operationId": "deleteSegment",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/platform/segments": {
      "post": {
        "tags": [
          "platform"
        ],
        "summary": "Create segment",
        "operationId": "createSegment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientSegmentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientSegmentRead"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/platform/tasks": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Get all tasks status",
        "operationId": "getAllTasksStatus",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaskRead"
                  },
                  "type": "array",
                  "title": "Response Get All Tasks Status Platform Tasks Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "platform"
        ],
        "summary": "Delete all tasks",
        "operationId": "deleteAllTasks",
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/platform/tasks/user": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Get user tasks",
        "operationId": "getUserTasks",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "pickup-keys",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "maxLength": 2048
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated pickup keys for accessing the tasks in case they are requested by a non-authenticated user",
              "title": "Pickup-Keys"
            },
            "description": "Comma-separated pickup keys for accessing the tasks in case they are requested by a non-authenticated user"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskRead"
                  },
                  "title": "Response Get User Tasks Platform Tasks User Get"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/platform/tasks/download": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Download task artifact",
        "operationId": "downloadTaskArtifact",
        "parameters": [
          {
            "name": "pickupKey",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 64,
              "description": "Pickup key for accessing the task's file artifact",
              "title": "Pickupkey"
            },
            "description": "Pickup key for accessing the task's file artifact"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/platform/tasks/{id}": {
      "delete": {
        "tags": [
          "platform"
        ],
        "summary": "Delete task",
        "operationId": "deleteTask",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/platform/cleanup": {
      "get": {
        "tags": [
          "platform"
        ],
        "summary": "Run platform cleanup",
        "operationId": "runPlatformCleanup",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/resources/precompute": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Trigger resource precomputation",
        "operationId": "triggerResourcePrecomputation",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/resources": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Create resource",
        "operationId": "createResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/AudioResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/ExternalReferencesResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/ImagesResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/LocationMetadataResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/PlainTextResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/RichTextResourceCreate"
                  },
                  {
                    "$ref": "#/components/schemas/TextAnnotationResourceCreate"
                  }
                ],
                "discriminator": {
                  "propertyName": "resourceType",
                  "mapping": {
                    "apiCall": "#/components/schemas/ApiCallResourceCreate",
                    "audio": "#/components/schemas/AudioResourceCreate",
                    "externalReferences": "#/components/schemas/ExternalReferencesResourceCreate",
                    "images": "#/components/schemas/ImagesResourceCreate",
                    "locationMetadata": "#/components/schemas/LocationMetadataResourceCreate",
                    "plainText": "#/components/schemas/PlainTextResourceCreate",
                    "richText": "#/components/schemas/RichTextResourceCreate",
                    "textAnnotation": "#/components/schemas/TextAnnotationResourceCreate"
                  }
                },
                "title": "Resource"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Create Resource Resources Post"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Find resources",
        "description": "Returns a list of all resources matching the given criteria.\n\nAs the resulting list of resources may contain resources of different types, the\nreturned resource objects cannot be typed to their precise resource type.",
        "operationId": "findResources",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "txt",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "ID of text to find resources for",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Txt"
            },
            "description": "ID of text to find resources for"
          },
          {
            "name": "lvl",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Structure level to find resources for",
              "title": "Lvl"
            },
            "description": "Structure level to find resources for"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32
                },
                {
                  "type": "null"
                }
              ],
              "description": "Type of resources to find",
              "title": "Type"
            },
            "description": "Type of resources to find"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 4096,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/ApiCallResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/AudioResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/ImagesResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/LocationMetadataResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/PlainTextResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/RichTextResourceRead"
                      },
                      {
                        "$ref": "#/components/schemas/TextAnnotationResourceRead"
                      }
                    ],
                    "discriminator": {
                      "propertyName": "resourceType",
                      "mapping": {
                        "apiCall": "#/components/schemas/ApiCallResourceRead",
                        "audio": "#/components/schemas/AudioResourceRead",
                        "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                        "images": "#/components/schemas/ImagesResourceRead",
                        "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                        "plainText": "#/components/schemas/PlainTextResourceRead",
                        "richText": "#/components/schemas/RichTextResourceRead",
                        "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                      }
                    }
                  },
                  "title": "Response Find Resources Resources Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/version": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Create resource version",
        "operationId": "createResourceVersion",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Create Resource Version Resources  Id  Version Post"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}": {
      "patch": {
        "tags": [
          "resources"
        ],
        "summary": "Update resource",
        "operationId": "updateResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/ApiCallResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/AudioResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/ExternalReferencesResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/ImagesResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/LocationMetadataResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/PlainTextResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/RichTextResourceUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/TextAnnotationResourceUpdate"
                  }
                ],
                "discriminator": {
                  "propertyName": "resourceType",
                  "mapping": {
                    "apiCall": "#/components/schemas/ApiCallResourceUpdate",
                    "audio": "#/components/schemas/AudioResourceUpdate",
                    "externalReferences": "#/components/schemas/ExternalReferencesResourceUpdate",
                    "images": "#/components/schemas/ImagesResourceUpdate",
                    "locationMetadata": "#/components/schemas/LocationMetadataResourceUpdate",
                    "plainText": "#/components/schemas/PlainTextResourceUpdate",
                    "richText": "#/components/schemas/RichTextResourceUpdate",
                    "textAnnotation": "#/components/schemas/TextAnnotationResourceUpdate"
                  }
                },
                "title": "Updates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Update Resource Resources  Id  Patch"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Get resource",
        "operationId": "getResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Get Resource Resources  Id  Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "resources"
        ],
        "summary": "Delete resource",
        "operationId": "deleteResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/transfer": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Transfer resource",
        "operationId": "transferResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "minLength": 24,
                "maxLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593",
                "title": "Target User Id"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Transfer Resource Resources  Id  Transfer Post"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/propose": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Propose resource",
        "operationId": "proposeResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Propose Resource Resources  Id  Propose Post"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/unpropose": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Unpropose resource",
        "operationId": "unproposeResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Unpropose Resource Resources  Id  Unpropose Post"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/publish": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Publish resource",
        "operationId": "publishResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Publish Resource Resources  Id  Publish Post"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/unpublish": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Unpublish resource",
        "operationId": "unpublishResource",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ApiCallResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/AudioResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ExternalReferencesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/ImagesResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/LocationMetadataResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/PlainTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/RichTextResourceRead"
                    },
                    {
                      "$ref": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  ],
                  "discriminator": {
                    "propertyName": "resourceType",
                    "mapping": {
                      "apiCall": "#/components/schemas/ApiCallResourceRead",
                      "audio": "#/components/schemas/AudioResourceRead",
                      "externalReferences": "#/components/schemas/ExternalReferencesResourceRead",
                      "images": "#/components/schemas/ImagesResourceRead",
                      "locationMetadata": "#/components/schemas/LocationMetadataResourceRead",
                      "plainText": "#/components/schemas/PlainTextResourceRead",
                      "richText": "#/components/schemas/RichTextResourceRead",
                      "textAnnotation": "#/components/schemas/TextAnnotationResourceRead"
                    }
                  },
                  "title": "Response Unpublish Resource Resources  Id  Unpublish Post"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/template": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Download resource template",
        "operationId": "downloadResourceTemplate",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/import": {
      "post": {
        "tags": [
          "resources"
        ],
        "summary": "Import resource contents",
        "operationId": "importResourceContents",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_resource_contents_resources__id__import_post"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/export": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Export resource contents",
        "operationId": "exportResourceContents",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "description": "ID of the resource to export",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            },
            "description": "ID of the resource to export"
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "json",
                "tekst-json",
                "csv"
              ],
              "type": "string",
              "description": "Export format",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the location to start the export's location range from",
              "title": "From"
            },
            "description": "ID of the location to start the export's location range from"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the location to end the export's location range at",
              "title": "To"
            },
            "description": "ID of the location to end the export's location range at"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/aggregations": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Get aggregations",
        "operationId": "getAggregations",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {},
                  "title": "Response Get Aggregations Resources  Id  Aggregations Get"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/resources/{id}/coverage": {
      "get": {
        "tags": [
          "resources"
        ],
        "summary": "Get resource coverage data",
        "operationId": "getResourceCoverageData",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceCoverage"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Perform search",
        "operationId": "performSearch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/QuickSearchRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/AdvancedSearchRequestBody"
                  }
                ],
                "title": "Body",
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "quick": "#/components/schemas/QuickSearchRequestBody",
                    "advanced": "#/components/schemas/AdvancedSearchRequestBody"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResults"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/search/index/create": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Create search index",
        "operationId": "createSearchIndex",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/search/index/info": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Get search index info",
        "operationId": "getSearchIndexInfo",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/IndexInfo"
                  },
                  "type": "array",
                  "title": "Response Get Search Index Info Search Index Info Get"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/search/export": {
      "post": {
        "tags": [
          "search"
        ],
        "summary": "Export search results",
        "operationId": "exportSearchResults",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/QuickSearchRequestBody"
                  },
                  {
                    "$ref": "#/components/schemas/AdvancedSearchRequestBody"
                  }
                ],
                "title": "Body",
                "discriminator": {
                  "propertyName": "type",
                  "mapping": {
                    "quick": "#/components/schemas/QuickSearchRequestBody",
                    "advanced": "#/components/schemas/AdvancedSearchRequestBody"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/status": {
      "get": {
        "tags": [
          "status"
        ],
        "summary": "Api status",
        "operationId": "apiStatus",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Api Status Status Get"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        }
      }
    },
    "/texts": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get all texts",
        "description": "Returns a list of all texts.\nOnly users with admin permissions will see inactive texts.",
        "operationId": "getAllTexts",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 128,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextRead"
                  },
                  "title": "Response Get All Texts Texts Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "texts"
        ],
        "summary": "Create text",
        "operationId": "createText",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{id}/template": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Download structure template",
        "description": "Download the structure template for a text to help compose a structure\ndefinition (or locations updates if there already is a structure)\nthat can later be uploaded to the server.",
        "operationId": "downloadStructureTemplate",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{id}/structure": {
      "post": {
        "tags": [
          "texts"
        ],
        "summary": "Import text structure",
        "description": "Uploads the structure definition for a text to apply as a structure of locations",
        "operationId": "importTextStructure",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_text_structure_texts__id__structure_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Conflict"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          }
        }
      },
      "patch": {
        "tags": [
          "texts"
        ],
        "summary": "Update text structure",
        "description": "Uploads updated locations data.\nOnly existing locations (with a correct ID) will be updated.",
        "operationId": "updateTextStructure",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_text_structure_texts__id__structure_patch"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRead"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          }
        }
      }
    },
    "/texts/{id}/level/{index}": {
      "post": {
        "tags": [
          "texts"
        ],
        "summary": "Insert level",
        "operationId": "insertLevel",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMaximum": 32,
              "description": "Index to insert the level at",
              "title": "Index"
            },
            "description": "Index to insert the level at"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TextLevelTranslation"
                },
                "minItems": 1,
                "maxItems": 3,
                "description": "Label translations for this level",
                "title": "Translations"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{id}/level/{lvl}": {
      "delete": {
        "tags": [
          "texts"
        ],
        "summary": "Delete level",
        "operationId": "deleteLevel",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          },
          {
            "name": "lvl",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMaximum": 32,
              "description": "Level to delete",
              "title": "Lvl"
            },
            "description": "Level to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{id}": {
      "delete": {
        "tags": [
          "texts"
        ],
        "summary": "Delete text",
        "operationId": "deleteText",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get text",
        "operationId": "getText",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "texts"
        ],
        "summary": "Update text",
        "operationId": "updateText",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 24,
              "maxLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Me",
        "operationId": "users:currentUser",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete me",
        "operationId": "deleteMe",
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update me",
        "operationId": "users:patchCurrentUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find users",
        "operationId": "findUsers",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 128,
              "description": "Query string to search in user data",
              "default": "",
              "title": "Q"
            },
            "description": "Query string to search in user data"
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include active users",
              "default": true,
              "title": "Active"
            },
            "description": "Include active users"
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include inactive users",
              "default": true,
              "title": "Inactive"
            },
            "description": "Include inactive users"
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include verified users",
              "default": true,
              "title": "Verified"
            },
            "description": "Include verified users"
          },
          {
            "name": "unverified",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include unverified users",
              "default": true,
              "title": "Unverified"
            },
            "description": "Include unverified users"
          },
          {
            "name": "admin",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include administrators",
              "default": true,
              "title": "Admin"
            },
            "description": "Include administrators"
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include regular users",
              "default": true,
              "title": "User"
            },
            "description": "Include regular users"
          },
          {
            "name": "pg",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Pg"
            },
            "description": "Page number"
          },
          {
            "name": "pgs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page size",
              "default": 10,
              "title": "Pgs"
            },
            "description": "Page size"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersSearchResult"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Forbidden"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/public/{user}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get public user",
        "description": "Returns public information on the user with the specified username or ID",
        "operationId": "getPublicUser",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 24,
                  "maxLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Username or ID",
              "title": "User"
            },
            "description": "Username or ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserReadPublic"
                }
              }
            }
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/public": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Find public users",
        "description": "Returns a list of public users matching the given query.\n\nOnly returns active user accounts. The query is considered to match a full token\n(e.g. first name, last name, username, a word in the affiliation field).",
        "operationId": "findPublicUsers",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 0,
              "maxLength": 128,
              "description": "Query string to search in user data",
              "default": "",
              "title": "Q"
            },
            "description": "Query string to search in user data"
          },
          {
            "name": "pg",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page number",
              "default": 1,
              "title": "Pg"
            },
            "description": "Page number"
          },
          {
            "name": "pgs",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Page size",
              "default": 10,
              "title": "Pgs"
            },
            "description": "Page size"
          },
          {
            "name": "emptyOk",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Empty query returns all users",
              "default": true,
              "title": "Emptyok"
            },
            "description": "Empty query returns all users"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicUsersSearchResult"
                }
              }
            }
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TekstErrorModel"
                }
              }
            },
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "auth:cookie.login",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_cookie_login_auth_cookie_login_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "LOGIN_BAD_CREDENTIALS": {
                    "summary": "Bad credentials or the user is inactive.",
                    "value": {
                      "detail": "LOGIN_BAD_CREDENTIALS"
                    }
                  },
                  "LOGIN_USER_NOT_VERIFIED": {
                    "summary": "The user is not verified.",
                    "value": {
                      "detail": "LOGIN_USER_NOT_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/cookie/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "auth:cookie.logout",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register",
        "operationId": "register:register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "REGISTER_USER_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "REGISTER_USER_ALREADY_EXISTS"
                    }
                  },
                  "REGISTER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "REGISTER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/request-verify-token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Request verify token",
        "operationId": "verify:requestToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_request_token_auth_request_verify_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Verify",
        "operationId": "verify:verify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_verify_verify_auth_verify_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "VERIFY_USER_BAD_TOKEN": {
                    "summary": "Bad token, not existing user ornot the e-mail currently set for the user.",
                    "value": {
                      "detail": "VERIFY_USER_BAD_TOKEN"
                    }
                  },
                  "VERIFY_USER_ALREADY_VERIFIED": {
                    "summary": "The user is already verified.",
                    "value": {
                      "detail": "VERIFY_USER_ALREADY_VERIFIED"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Forgot password",
        "operationId": "reset:forgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_forgot_password_auth_forgot_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset password",
        "operationId": "reset:resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_reset_reset_password_auth_reset_password_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                },
                "examples": {
                  "RESET_PASSWORD_BAD_TOKEN": {
                    "summary": "Bad or expired token.",
                    "value": {
                      "detail": "RESET_PASSWORD_BAD_TOKEN"
                    }
                  },
                  "RESET_PASSWORD_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "RESET_PASSWORD_INVALID_PASSWORD",
                        "reason": "Password should be at least 3 characters"
                      }
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user",
        "operationId": "users:user",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update user",
        "operationId": "users:patchUser",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRead"
                }
              }
            }
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "400": {
            "content": {
              "application/json": {
                "examples": {
                  "UPDATE_USER_EMAIL_ALREADY_EXISTS": {
                    "summary": "A user with this email already exists.",
                    "value": {
                      "detail": "UPDATE_USER_EMAIL_ALREADY_EXISTS"
                    }
                  },
                  "UPDATE_USER_INVALID_PASSWORD": {
                    "summary": "Password validation failed.",
                    "value": {
                      "detail": {
                        "code": "UPDATE_USER_INVALID_PASSWORD",
                        "reason": "Password should beat least 3 characters"
                      }
                    }
                  }
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            },
            "description": "Bad Request"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete user",
        "operationId": "users:deleteUser",
        "security": [
          {
            "APIKeyCookie": []
          },
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "401": {
            "description": "Missing token or inactive user."
          },
          "403": {
            "description": "Not a superuser."
          },
          "404": {
            "description": "The user does not exist."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminNotificationTrigger": {
        "type": "string",
        "enum": [
          "userAwaitsActivation",
          "newCorrection"
        ]
      },
      "AdvancedSearchRequestBody": {
        "properties": {
          "type": {
            "type": "string",
            "const": "advanced",
            "title": "Type",
            "description": "Search type",
            "default": "advanced"
          },
          "q": {
            "items": {
              "$ref": "#/components/schemas/ResourceSearchQuery"
            },
            "type": "array",
            "maxItems": 32,
            "minItems": 1,
            "title": "Q",
            "description": "Resource-specific queries",
            "default": [],
            "optionalNullable": false
          },
          "gen": {
            "$ref": "#/components/schemas/GeneralSearchSettings",
            "description": "General search settings",
            "default": {
              "pgn": {
                "pg": 1,
                "pgs": 10
              },
              "strict": false
            },
            "optionalNullable": false
          },
          "adv": {
            "$ref": "#/components/schemas/AdvancedSearchSettings",
            "description": "Advanced search settings",
            "default": {},
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "AdvancedSearchRequestBody"
      },
      "AdvancedSearchSettings": {
        "properties": {},
        "type": "object",
        "title": "AdvancedSearchSettings"
      },
      "AnnotationGroup": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "title": "Key",
            "description": "Key identifying this annotation group"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/AnnotationGroupTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Translations",
            "description": "Translation for the label of an annotation group"
          }
        },
        "type": "object",
        "required": [
          "key",
          "translations"
        ],
        "title": "AnnotationGroup"
      },
      "AnnotationGroupTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Translation",
            "description": "Translation of an annotation group label"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "AnnotationGroupTranslation"
      },
      "ApiCallContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "query": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Query",
            "description": "Query payload to use for the API call. This can be a URL query string,(for GET requests) a JSON object, or whatever the API expects."
          },
          "transformContext": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              }
            ],
            "title": "Transformcontext",
            "description": "Extra data that will be made available to the transformation script. This has to be a valid, string-encoded JSON object.",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "query"
        ],
        "title": "ApiCallContentCreate"
      },
      "ApiCallContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "query": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Query",
            "description": "Query payload to use for the API call. This can be a URL query string,(for GET requests) a JSON object, or whatever the API expects."
          },
          "transformContext": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              }
            ],
            "title": "Transformcontext",
            "description": "Extra data that will be made available to the transformation script. This has to be a valid, string-encoded JSON object.",
            "optionalNullable": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "query"
        ],
        "title": "ApiCallContentRead"
      },
      "ApiCallContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "query": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 102400,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Query",
            "description": "Query payload to use for the API call. This can be a URL query string,(for GET requests) a JSON object, or whatever the API expects.",
            "optionalNullable": false
          },
          "transformContext": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              }
            ],
            "title": "Transformcontext",
            "description": "Extra data that will be made available to the transformation script. This has to be a valid, string-encoded JSON object.",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ApiCallContentUpdate"
      },
      "ApiCallModifiedCommonResourceConfig": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 1
              }
            ],
            "title": "Category",
            "description": "Resource category key"
          },
          "sortOrder": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Sortorder",
            "description": "Sort order for displaying this resource among others",
            "default": 10
          },
          "defaultActive": {
            "type": "boolean",
            "title": "Defaultactive",
            "description": "Whether this resource is active by default when public",
            "default": true,
            "optionalNullable": false
          },
          "enableContentContext": {
            "type": "boolean",
            "const": false,
            "title": "Enablecontentcontext",
            "description": "Whether contents of this resource should be available for the parent level (always false for API call resources)",
            "default": false,
            "optionalNullable": false
          },
          "searchableQuick": {
            "type": "boolean",
            "const": false,
            "title": "Searchablequick",
            "description": "Whether this resource should be included in quick search (always false as API call contents are not searchable)",
            "default": false,
            "optionalNullable": false
          },
          "searchableAdv": {
            "type": "boolean",
            "const": false,
            "title": "Searchableadv",
            "description": "Whether this resource should accessible via advanced search (always false as API call contents are not searchable)",
            "default": false,
            "optionalNullable": false
          },
          "rtl": {
            "type": "boolean",
            "title": "Rtl",
            "description": "Whether to display text contents in right-to-left direction",
            "default": false,
            "optionalNullable": false
          },
          "osk": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "description": "Key identifying an OSK mode"
              },
              {
                "type": "null"
              }
            ],
            "title": "Osk"
          }
        },
        "type": "object",
        "title": "ApiCallModifiedCommonResourceConfig"
      },
      "ApiCallResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/ApiCallModifiedCommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": false,
              "searchableAdv": false,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralApiCallResourceConfig",
            "default": {
              "defaultCollapsed": false
            }
          },
          "apiCall": {
            "$ref": "#/components/schemas/ApiCallSpecialConfig",
            "default": {
              "endpoint": "https://api.example.com/v2/some/endpoint",
              "method": "GET",
              "contentType": "application/json",
              "transformDeps": []
            }
          }
        },
        "type": "object",
        "title": "ApiCallResourceConfig"
      },
      "ApiCallResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ApiCallResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": false,
                "searchableQuick": false,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "apiCall": {
                "contentType": "application/json",
                "endpoint": "https://api.example.com/v2/some/endpoint",
                "method": "GET",
                "transformDeps": []
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ApiCallResourceCreate"
      },
      "ApiCallResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ApiCallResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": false,
                "searchableQuick": false,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "apiCall": {
                "contentType": "application/json",
                "endpoint": "https://api.example.com/v2/some/endpoint",
                "method": "GET",
                "transformDeps": []
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ApiCallResourceRead"
      },
      "ApiCallResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "apiCall",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ApiCallResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ApiCallResourceUpdate"
      },
      "ApiCallSpecialConfig": {
        "properties": {
          "endpoint": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "title": "Endpoint",
            "default": "https://api.example.com/v2/some/endpoint"
          },
          "method": {
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "QUERY",
              "SEARCH"
            ],
            "title": "Method",
            "default": "GET"
          },
          "contentType": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Contenttype",
            "default": "application/json"
          },
          "transformDeps": {
            "items": {
              "type": "string",
              "maxLength": 2083,
              "minLength": 1
            },
            "type": "array",
            "maxItems": 32,
            "minItems": 0,
            "title": "Transformdeps",
            "default": []
          },
          "transformJs": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 102400,
                "minLength": 0
              }
            ],
            "title": "Transformjs",
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "ApiCallSpecialConfig",
        "description": "Config properties specific to the API call resource type"
      },
      "AudioContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/AudioFile"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Files",
            "description": "List of audio file objects"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "files"
        ],
        "title": "AudioContentCreate"
      },
      "AudioContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/AudioFile"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Files",
            "description": "List of audio file objects"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "files"
        ],
        "title": "AudioContentRead"
      },
      "AudioContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AudioFile"
                },
                "type": "array",
                "maxItems": 100,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Files",
            "description": "List of audio file objects",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "AudioContentUpdate"
      },
      "AudioFile": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "title": "Url",
            "description": "URL of the audio file"
          },
          "sourceUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Sourceurl",
            "description": "URL of the source website of the image"
          },
          "caption": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8192,
                "minLength": 1
              }
            ],
            "title": "Caption",
            "description": "Caption of the audio file"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AudioFile"
      },
      "AudioResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/CommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralAudioResourceConfig",
            "default": {
              "defaultCollapsed": false
            }
          }
        },
        "type": "object",
        "title": "AudioResourceConfig"
      },
      "AudioResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/AudioResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "AudioResourceCreate"
      },
      "AudioResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/AudioResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "AudioResourceRead"
      },
      "AudioResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "audio",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "AudioResourceUpdate"
      },
      "AudioSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "audio",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "caption": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Caption",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "AudioSearchQuery"
      },
      "Body_auth_cookie_login_auth_cookie_login_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_auth_cookie_login_auth_cookie_login_post"
      },
      "Body_import_resource_contents_resources__id__import_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "JSON file containing the resource content data"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_resource_contents_resources__id__import_post"
      },
      "Body_import_text_structure_texts__id__structure_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "JSON file containing the text's structure"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_import_text_structure_texts__id__structure_post"
      },
      "Body_reset_forgot_password_auth_forgot_password_post": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_reset_forgot_password_auth_forgot_password_post"
      },
      "Body_reset_reset_password_auth_reset_password_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "token",
          "password"
        ],
        "title": "Body_reset_reset_password_auth_reset_password_post"
      },
      "Body_update_text_structure_texts__id__structure_patch": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "JSON file containing the locations to update"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_update_text_structure_texts__id__structure_patch"
      },
      "Body_verify_request_token_auth_request_verify_token_post": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "Body_verify_request_token_auth_request_verify_token_post"
      },
      "Body_verify_verify_auth_verify_post": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "Body_verify_verify_auth_verify_post"
      },
      "BookmarkCreate": {
        "properties": {
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "ID of the text location this bookmark refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Comment associated with this bookmark"
          }
        },
        "type": "object",
        "required": [
          "locationId"
        ],
        "title": "BookmarkCreate"
      },
      "BookmarkRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "userId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Userid",
            "description": "ID of user who created this bookmark",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of text this bookmark belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "ID of the text location this bookmark refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this bookmark refers to"
          },
          "position": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Position",
            "description": "Position of the text location this bookmark refers to"
          },
          "locationLabels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Locationlabels",
            "description": "Text location labels from root to target location"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Comment associated with this bookmark"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "userId",
          "textId",
          "locationId",
          "level",
          "position",
          "locationLabels"
        ],
        "title": "BookmarkRead"
      },
      "ClientSegmentCreate": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z0-9\\-_]+",
            "title": "Key",
            "description": "Key of this segment. System segment keys must start with `system`."
          },
          "editorMode": {
            "type": "string",
            "enum": [
              "wysiwyg",
              "html"
            ],
            "title": "Editormode",
            "description": "Last used editor mode",
            "default": "wysiwyg"
          },
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey",
            "description": "Locale indicating the translation language of this segment"
          },
          "title": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Title",
            "description": "Title of this segment"
          },
          "html": {
            "type": "string",
            "maxLength": 1048576,
            "minLength": 1,
            "title": "Html",
            "description": "HTML content of this segment"
          }
        },
        "type": "object",
        "required": [
          "key",
          "locale",
          "title",
          "html"
        ],
        "title": "ClientSegmentCreate"
      },
      "ClientSegmentHead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key",
          "locale"
        ],
        "title": "ClientSegmentHead"
      },
      "ClientSegmentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "key": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "pattern": "[a-zA-Z0-9\\-_]+",
            "title": "Key",
            "description": "Key of this segment. System segment keys must start with `system`."
          },
          "editorMode": {
            "type": "string",
            "enum": [
              "wysiwyg",
              "html"
            ],
            "title": "Editormode",
            "description": "Last used editor mode",
            "default": "wysiwyg"
          },
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey",
            "description": "Locale indicating the translation language of this segment"
          },
          "title": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Title",
            "description": "Title of this segment"
          },
          "html": {
            "type": "string",
            "maxLength": 1048576,
            "minLength": 1,
            "title": "Html",
            "description": "HTML content of this segment"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "key",
          "locale",
          "title",
          "html"
        ],
        "title": "ClientSegmentRead"
      },
      "ClientSegmentUpdate": {
        "properties": {
          "key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "pattern": "[a-zA-Z0-9\\-_]+"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key",
            "description": "Key of this segment. System segment keys must start with `system`.",
            "optionalNullable": false
          },
          "editorMode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "wysiwyg",
                  "html"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Editormode",
            "description": "Last used editor mode",
            "optionalNullable": false
          },
          "locale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TranslationLocaleKey"
              },
              {
                "type": "null"
              }
            ],
            "description": "Locale indicating the translation language of this segment",
            "optionalNullable": false
          },
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this segment",
            "optionalNullable": false
          },
          "html": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 1048576,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Html",
            "description": "HTML content of this segment",
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "ClientSegmentUpdate"
      },
      "CommonResourceConfig": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 1
              }
            ],
            "title": "Category",
            "description": "Resource category key"
          },
          "sortOrder": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Sortorder",
            "description": "Sort order for displaying this resource among others",
            "default": 10
          },
          "defaultActive": {
            "type": "boolean",
            "title": "Defaultactive",
            "description": "Whether this resource is active by default when public",
            "default": true,
            "optionalNullable": false
          },
          "enableContentContext": {
            "type": "boolean",
            "title": "Enablecontentcontext",
            "description": "Show combined contents of this resource on the parent level",
            "default": false,
            "optionalNullable": false
          },
          "searchableQuick": {
            "type": "boolean",
            "title": "Searchablequick",
            "description": "Whether this resource should be included in quick search",
            "default": true,
            "optionalNullable": false
          },
          "searchableAdv": {
            "type": "boolean",
            "title": "Searchableadv",
            "description": "Whether this resource should accessible via advanced search",
            "default": true,
            "optionalNullable": false
          },
          "rtl": {
            "type": "boolean",
            "title": "Rtl",
            "description": "Whether to display text contents in right-to-left direction",
            "default": false,
            "optionalNullable": false
          },
          "osk": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "description": "Key identifying an OSK mode"
              },
              {
                "type": "null"
              }
            ],
            "title": "Osk"
          }
        },
        "type": "object",
        "title": "CommonResourceConfig"
      },
      "CommonResourceSearchQueryData": {
        "properties": {
          "occ": {
            "type": "string",
            "enum": [
              "should",
              "must",
              "not"
            ],
            "title": "Occ",
            "description": "The occurrence type of the search query",
            "default": "must",
            "optionalNullable": true
          },
          "res": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Res",
            "description": "ID of the resource to search in",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "cmt": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Cmt",
            "description": "Comment search query",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "res"
        ],
        "title": "CommonResourceSearchQueryData"
      },
      "ContentCssProperties": {
        "items": {
          "$ref": "#/components/schemas/ContentCssProperty"
        },
        "type": "array",
        "maxItems": 64,
        "minItems": 0
      },
      "ContentCssProperty": {
        "properties": {
          "prop": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Prop",
            "description": "A CSS property name"
          },
          "value": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Value",
            "description": "A CSS property value"
          }
        },
        "type": "object",
        "required": [
          "prop",
          "value"
        ],
        "title": "ContentCssProperty"
      },
      "CorrectionCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "ID of the resource this correction refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "ID of the location this correction refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "note": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Note",
            "description": "Content of the correction note"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "locationId",
          "note"
        ],
        "title": "CorrectionCreate"
      },
      "CorrectionRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "ID of the resource this correction refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "ID of the location this correction refers to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "note": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Note",
            "description": "Content of the correction note"
          },
          "userId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Userid",
            "description": "ID of the user who created the correction note",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "position": {
            "type": "integer",
            "title": "Position",
            "description": "Position of the correction on the resource's level"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date",
            "description": "Date when the correction was created"
          },
          "locationLabels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Locationlabels",
            "description": "Text location labels from root to target location"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "locationId",
          "note",
          "userId",
          "position",
          "date",
          "locationLabels"
        ],
        "title": "CorrectionRead"
      },
      "DeepLLinksConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Enable/disable quick translation links to DeepL",
            "default": false
          },
          "sourceLanguage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DeepLSourceLanguage"
              },
              {
                "type": "null"
              }
            ],
            "description": "Source language"
          }
        },
        "type": "object",
        "title": "DeepLLinksConfig",
        "description": "Resource configuration model for DeepL translation links.\nThe corresponding field MUST be named `deepl_links`!"
      },
      "DeepLSourceLanguage": {
        "type": "string",
        "enum": [
          "ar",
          "bg",
          "cs",
          "da",
          "de",
          "el",
          "en",
          "es",
          "et",
          "fi",
          "fr",
          "hu",
          "id",
          "it",
          "ja",
          "ko",
          "lt",
          "lv",
          "nb",
          "nl",
          "pl",
          "pt",
          "ro",
          "ru",
          "sk",
          "sl",
          "sv",
          "tr",
          "uk",
          "zh"
        ]
      },
      "DeleteLocationResult": {
        "properties": {
          "contents": {
            "type": "integer",
            "title": "Contents"
          },
          "locations": {
            "type": "integer",
            "title": "Locations"
          }
        },
        "type": "object",
        "required": [
          "contents",
          "locations"
        ],
        "title": "DeleteLocationResult"
      },
      "ErrorDetail": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "msg": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1
              }
            ],
            "title": "Msg"
          },
          "values": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Values"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "ErrorDetail"
      },
      "ErrorModel": {
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "ErrorModel"
      },
      "ExternalReferencesContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ExternalReferencesLink"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Links",
            "description": "List of external reference link objects"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "links"
        ],
        "title": "ExternalReferencesContentCreate"
      },
      "ExternalReferencesContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "links": {
            "items": {
              "$ref": "#/components/schemas/ExternalReferencesLink"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Links",
            "description": "List of external reference link objects"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "links"
        ],
        "title": "ExternalReferencesContentRead"
      },
      "ExternalReferencesContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExternalReferencesLink"
                },
                "type": "array",
                "maxItems": 100,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Links",
            "description": "List of external reference link objects",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ExternalReferencesContentUpdate"
      },
      "ExternalReferencesLink": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "title": "Url",
            "description": "URL of the link"
          },
          "title": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Title",
            "description": "Title/text of the link"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Description of the link"
          }
        },
        "type": "object",
        "required": [
          "url",
          "title"
        ],
        "title": "ExternalReferencesLink"
      },
      "ExternalReferencesResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/CommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralExternalReferencesResourceConfig",
            "default": {
              "defaultCollapsed": false
            }
          }
        },
        "type": "object",
        "title": "ExternalReferencesResourceConfig"
      },
      "ExternalReferencesResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ExternalReferencesResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ExternalReferencesResourceCreate"
      },
      "ExternalReferencesResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ExternalReferencesResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ExternalReferencesResourceRead"
      },
      "ExternalReferencesResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "externalReferences",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExternalReferencesResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ExternalReferencesResourceUpdate"
      },
      "ExternalReferencesSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "externalReferences",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "text": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Text",
            "description": "Text to search for",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ExternalReferencesSearchQuery"
      },
      "FocusViewConfig": {
        "properties": {
          "singleLine": {
            "type": "boolean",
            "title": "Singleline",
            "description": "Show contents as single line of text when in focus view",
            "default": true
          },
          "delimiter": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1,
            "pattern": "[^\\n\\r]+",
            "title": "Delimiter",
            "description": "Delimiter used for single-line display in focus view",
            "default": " / "
          }
        },
        "type": "object",
        "title": "FocusViewConfig"
      },
      "GeneralApiCallResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": false
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "title": "GeneralApiCallResourceConfig"
      },
      "GeneralAudioResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": false
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "title": "GeneralAudioResourceConfig"
      },
      "GeneralExternalReferencesResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": false
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "title": "GeneralExternalReferencesResourceConfig"
      },
      "GeneralImagesResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": true
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "title": "GeneralImagesResourceConfig"
      },
      "GeneralPlainTextResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": false
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          },
          "focusView": {
            "$ref": "#/components/schemas/FocusViewConfig",
            "default": {
              "singleLine": true,
              "delimiter": " / "
            }
          },
          "searchReplacements": {
            "$ref": "#/components/schemas/SearchReplacements",
            "default": []
          },
          "contentCss": {
            "$ref": "#/components/schemas/ContentCssProperties",
            "default": []
          }
        },
        "type": "object",
        "title": "GeneralPlainTextResourceConfig"
      },
      "GeneralRichTextResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": true
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          },
          "searchReplacements": {
            "$ref": "#/components/schemas/SearchReplacements",
            "default": []
          },
          "contentCss": {
            "$ref": "#/components/schemas/ContentCssProperties",
            "default": []
          }
        },
        "type": "object",
        "title": "GeneralRichTextResourceConfig"
      },
      "GeneralSearchSettings": {
        "properties": {
          "pgn": {
            "$ref": "#/components/schemas/PaginationSettings",
            "description": "Pagination settings",
            "default": {
              "pg": 1,
              "pgs": 10
            },
            "optionalNullable": false
          },
          "sort": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SortingPreset"
              },
              {
                "type": "null"
              }
            ],
            "description": "Sorting preset",
            "optionalNullable": false
          },
          "strict": {
            "type": "boolean",
            "title": "Strict",
            "default": false
          }
        },
        "type": "object",
        "title": "GeneralSearchSettings"
      },
      "GeneralTextAnnotationResourceConfig": {
        "properties": {
          "defaultCollapsed": {
            "type": "boolean",
            "title": "Defaultcollapsed",
            "description": "Whether contents of this resource should be collapsed by default",
            "default": false
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "title": "GeneralTextAnnotationResourceConfig"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageFile": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "title": "Url",
            "description": "URL of the image file"
          },
          "thumbUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Thumburl",
            "description": "URL of the image file thumbnail"
          },
          "sourceUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Sourceurl",
            "description": "URL of the source website of the image"
          },
          "caption": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 8192,
                "minLength": 1
              }
            ],
            "title": "Caption",
            "description": "Caption of the image"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ImageFile"
      },
      "ImagesContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ImageFile"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Files",
            "description": "List of image file objects"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "files"
        ],
        "title": "ImagesContentCreate"
      },
      "ImagesContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/ImageFile"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Files",
            "description": "List of image file objects"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "files"
        ],
        "title": "ImagesContentRead"
      },
      "ImagesContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ImageFile"
                },
                "type": "array",
                "maxItems": 100,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Files",
            "description": "List of image file objects",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ImagesContentUpdate"
      },
      "ImagesResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/CommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralImagesResourceConfig",
            "default": {
              "defaultCollapsed": true
            }
          }
        },
        "type": "object",
        "title": "ImagesResourceConfig"
      },
      "ImagesResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ImagesResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": true
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ImagesResourceCreate"
      },
      "ImagesResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/ImagesResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": true
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "ImagesResourceRead"
      },
      "ImagesResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "images",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImagesResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "ImagesResourceUpdate"
      },
      "ImagesSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "images",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "caption": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Caption",
            "description": "Caption content search query",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "ImagesSearchQuery"
      },
      "IndexInfo": {
        "properties": {
          "textId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Textid"
          },
          "documents": {
            "type": "integer",
            "title": "Documents"
          },
          "size": {
            "type": "string",
            "title": "Size"
          },
          "searches": {
            "type": "integer",
            "title": "Searches"
          },
          "fields": {
            "type": "integer",
            "title": "Fields"
          },
          "upToDate": {
            "type": "boolean",
            "title": "Uptodate"
          }
        },
        "type": "object",
        "required": [
          "textId",
          "documents",
          "size",
          "searches",
          "fields",
          "upToDate"
        ],
        "title": "IndexInfo"
      },
      "ItemDisplayProps": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ItemName"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/ItemsDisplayTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Translations",
            "description": "Translations for the name of the item"
          },
          "group": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ItemGroupName"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "translations",
          "group"
        ],
        "title": "ItemDisplayProps"
      },
      "ItemGroup": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/ItemGroupName"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/ItemsDisplayTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Translations",
            "description": "Translations for the name of the item group"
          }
        },
        "type": "object",
        "required": [
          "name",
          "translations"
        ],
        "title": "ItemGroup"
      },
      "ItemGroupName": {
        "type": "string",
        "maxLength": 32,
        "minLength": 1
      },
      "ItemName": {
        "type": "string",
        "maxLength": 32,
        "minLength": 1
      },
      "ItemsDisplayTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Translation",
            "description": "Translation of an item or item group name"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "ItemsDisplayTranslation"
      },
      "LineLabellingConfig": {
        "properties": {
          "enabled": {
            "type": "boolean",
            "title": "Enabled",
            "description": "Enable/disable line labelling",
            "default": false
          },
          "labellingType": {
            "type": "string",
            "enum": [
              "numbersZeroBased",
              "numbersOneBased",
              "lettersLowercase",
              "lettersUppercase"
            ],
            "title": "Labellingtype",
            "description": "Line labelling type",
            "default": "numbersOneBased"
          }
        },
        "type": "object",
        "title": "LineLabellingConfig"
      },
      "LocaleKey": {
        "type": "string",
        "enum": [
          "deDE",
          "enUS"
        ]
      },
      "LocationCoverage": {
        "properties": {
          "locId": {
            "type": "string",
            "title": "Locid"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "covered": {
            "type": "boolean",
            "title": "Covered",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "locId",
          "label"
        ],
        "title": "LocationCoverage"
      },
      "LocationCreate": {
        "properties": {
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this location belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "parentId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentid",
            "description": "ID of parent location"
          },
          "level": {
            "type": "integer",
            "exclusiveMaximum": 32.0,
            "minimum": 0.0,
            "title": "Level",
            "description": "Index of structure level this location is on"
          },
          "position": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Position",
            "description": "Position among all text locations on this level"
          },
          "label": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Label",
            "description": "Label for identifying this text location in level context"
          },
          "aliases": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 32,
                  "minLength": 1
                },
                "type": "array",
                "maxItems": 16,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Aliases",
            "description": "List of aliases for this location"
          }
        },
        "type": "object",
        "required": [
          "textId",
          "level",
          "position",
          "label"
        ],
        "title": "LocationCreate"
      },
      "LocationData": {
        "properties": {
          "locationPath": {
            "items": {
              "$ref": "#/components/schemas/LocationRead"
            },
            "type": "array",
            "title": "Locationpath",
            "description": "Path of locations from level 0 to this location",
            "default": []
          },
          "prev": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prev",
            "description": "ID of the preceding location on the same level"
          },
          "next": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next",
            "description": "ID of the subsequent location on the same level"
          },
          "contents": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ApiCallContentRead"
                },
                {
                  "$ref": "#/components/schemas/AudioContentRead"
                },
                {
                  "$ref": "#/components/schemas/ExternalReferencesContentRead"
                },
                {
                  "$ref": "#/components/schemas/ImagesContentRead"
                },
                {
                  "$ref": "#/components/schemas/LocationMetadataContentRead"
                },
                {
                  "$ref": "#/components/schemas/PlainTextContentRead"
                },
                {
                  "$ref": "#/components/schemas/RichTextContentRead"
                },
                {
                  "$ref": "#/components/schemas/TextAnnotationContentRead"
                }
              ],
              "discriminator": {
                "propertyName": "resourceType",
                "mapping": {
                  "apiCall": "#/components/schemas/ApiCallContentRead",
                  "audio": "#/components/schemas/AudioContentRead",
                  "externalReferences": "#/components/schemas/ExternalReferencesContentRead",
                  "images": "#/components/schemas/ImagesContentRead",
                  "locationMetadata": "#/components/schemas/LocationMetadataContentRead",
                  "plainText": "#/components/schemas/PlainTextContentRead",
                  "richText": "#/components/schemas/RichTextContentRead",
                  "textAnnotation": "#/components/schemas/TextAnnotationContentRead"
                }
              }
            },
            "type": "array",
            "title": "Contents",
            "description": "Contents of various resources on this location",
            "default": []
          }
        },
        "type": "object",
        "title": "LocationData"
      },
      "LocationMetadataContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LocationMetadataEntry"
            },
            "type": "array",
            "maxItems": 128,
            "minItems": 1,
            "title": "Entries",
            "description": "List of metadata entries for a certain location"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "entries"
        ],
        "title": "LocationMetadataContentCreate"
      },
      "LocationMetadataContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LocationMetadataEntry"
            },
            "type": "array",
            "maxItems": 128,
            "minItems": 1,
            "title": "Entries",
            "description": "List of metadata entries for a certain location"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "entries"
        ],
        "title": "LocationMetadataContentRead"
      },
      "LocationMetadataContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "entries": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LocationMetadataEntry"
                },
                "type": "array",
                "maxItems": 128,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Entries",
            "description": "List of metadata entries for a certain location",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "LocationMetadataContentUpdate"
      },
      "LocationMetadataEntry": {
        "properties": {
          "key": {
            "$ref": "#/components/schemas/LocationMetadataEntryKey"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/LocationMetadataEntryValue"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 1,
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "LocationMetadataEntry"
      },
      "LocationMetadataEntryKey": {
        "type": "string",
        "maxLength": 32,
        "minLength": 1
      },
      "LocationMetadataEntryValue": {
        "type": "string",
        "maxLength": 256,
        "minLength": 1
      },
      "LocationMetadataModifiedCommonResourceConfig": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 1
              }
            ],
            "title": "Category",
            "description": "Resource category key"
          },
          "sortOrder": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Sortorder",
            "description": "Sort order for displaying this resource among others",
            "default": 10
          },
          "defaultActive": {
            "type": "boolean",
            "title": "Defaultactive",
            "description": "Whether this resource is active by default when public",
            "default": true,
            "optionalNullable": false
          },
          "enableContentContext": {
            "type": "boolean",
            "const": false,
            "title": "Enablecontentcontext",
            "description": "Whether contents of this resource should be available for the parent level (always false for location metadata resources)",
            "default": false,
            "optionalNullable": false
          },
          "searchableQuick": {
            "type": "boolean",
            "title": "Searchablequick",
            "description": "Whether this resource should be included in quick search (default false for location metadata resources)",
            "default": false,
            "optionalNullable": false
          },
          "searchableAdv": {
            "type": "boolean",
            "title": "Searchableadv",
            "description": "Whether this resource should accessible via advanced search",
            "default": true,
            "optionalNullable": false
          },
          "rtl": {
            "type": "boolean",
            "title": "Rtl",
            "description": "Whether to display text contents in right-to-left direction",
            "default": false,
            "optionalNullable": false
          },
          "osk": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "description": "Key identifying an OSK mode"
              },
              {
                "type": "null"
              }
            ],
            "title": "Osk"
          }
        },
        "type": "object",
        "title": "LocationMetadataModifiedCommonResourceConfig"
      },
      "LocationMetadataQueryEntry": {
        "properties": {
          "k": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "K",
            "description": "Metadata entry key query"
          },
          "v": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 256,
                "minLength": 0
              }
            ],
            "title": "V",
            "description": "Metadata entry value query"
          },
          "wc": {
            "type": "boolean",
            "title": "Wc",
            "description": "Whether to interpret wildcards in the metadata value query",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "k"
        ],
        "title": "LocationMetadataQueryEntry"
      },
      "LocationMetadataResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/LocationMetadataModifiedCommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": false,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralTextAnnotationResourceConfig",
            "default": {
              "defaultCollapsed": false
            }
          },
          "locationMetadata": {
            "$ref": "#/components/schemas/LocationMetadataSpecialConfig",
            "default": {
              "groups": [],
              "displayProps": []
            }
          }
        },
        "type": "object",
        "title": "LocationMetadataResourceConfig"
      },
      "LocationMetadataResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/LocationMetadataResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": false,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "locationMetadata": {
                "displayProps": [],
                "groups": []
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "LocationMetadataResourceCreate"
      },
      "LocationMetadataResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/LocationMetadataResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": false,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "locationMetadata": {
                "displayProps": [],
                "groups": []
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "LocationMetadataResourceRead"
      },
      "LocationMetadataResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocationMetadataResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "LocationMetadataResourceUpdate"
      },
      "LocationMetadataSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "locationMetadata",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "entries": {
            "items": {
              "$ref": "#/components/schemas/LocationMetadataQueryEntry"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Entries",
            "description": "List of metadata queries",
            "default": [],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "LocationMetadataSearchQuery"
      },
      "LocationMetadataSpecialConfig": {
        "properties": {
          "groups": {
            "items": {
              "$ref": "#/components/schemas/ItemGroup"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Groups",
            "description": "Item display groups",
            "default": []
          },
          "displayProps": {
            "items": {
              "$ref": "#/components/schemas/ItemDisplayProps"
            },
            "type": "array",
            "maxItems": 128,
            "title": "Displayprops",
            "description": "Item display properties",
            "default": []
          }
        },
        "type": "object",
        "title": "LocationMetadataSpecialConfig",
        "description": "Config properties specific to the location metadata resource type"
      },
      "LocationRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this location belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "parentId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentid",
            "description": "ID of parent location"
          },
          "level": {
            "type": "integer",
            "exclusiveMaximum": 32.0,
            "minimum": 0.0,
            "title": "Level",
            "description": "Index of structure level this location is on"
          },
          "position": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Position",
            "description": "Position among all text locations on this level"
          },
          "label": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "title": "Label",
            "description": "Label for identifying this text location in level context"
          },
          "aliases": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 32,
                  "minLength": 1
                },
                "type": "array",
                "maxItems": 16,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Aliases",
            "description": "List of aliases for this location"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "textId",
          "level",
          "position",
          "label"
        ],
        "title": "LocationRead"
      },
      "LocationUpdate": {
        "properties": {
          "parentId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentid",
            "description": "ID of parent location",
            "optionalNullable": true
          },
          "level": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMaximum": 32.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Level",
            "description": "Index of structure level this location is on",
            "optionalNullable": false
          },
          "position": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Position",
            "description": "Position among all text locations on this level",
            "optionalNullable": false
          },
          "label": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Label",
            "description": "Label for identifying this text location in level context",
            "optionalNullable": false
          },
          "aliases": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 32,
                  "minLength": 1
                },
                "type": "array",
                "maxItems": 16,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Aliases",
            "description": "List of aliases for this location",
            "optionalNullable": true
          }
        },
        "type": "object",
        "title": "LocationUpdate"
      },
      "MainNavEntryTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 42,
            "minLength": 1,
            "title": "Translation"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "MainNavEntryTranslation"
      },
      "MetadataEntry": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "title": "Key",
            "description": "Key identifying this metadata entry"
          },
          "value": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Value",
            "description": "Value of this metadata entry"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "MetadataEntry"
      },
      "MoveLocationRequestBody": {
        "properties": {
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "after": {
            "type": "boolean",
            "title": "After"
          },
          "parentId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parentid"
          }
        },
        "type": "object",
        "required": [
          "position",
          "after",
          "parentId"
        ],
        "title": "MoveLocationRequestBody"
      },
      "OskMode": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Key",
            "description": "Key identifying an OSK mode"
          },
          "name": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Name"
          },
          "font": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              }
            ],
            "title": "Font",
            "description": "Name of a font"
          }
        },
        "type": "object",
        "required": [
          "key",
          "name"
        ],
        "title": "OskMode"
      },
      "PaginationSettings": {
        "properties": {
          "pg": {
            "type": "integer",
            "title": "Pg",
            "description": "Page number",
            "default": 1,
            "optionalNullable": false
          },
          "pgs": {
            "type": "integer",
            "title": "Pgs",
            "description": "Page size",
            "default": 10,
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "PaginationSettings"
      },
      "ParentCoverage": {
        "properties": {
          "label": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          },
          "locations": {
            "items": {
              "$ref": "#/components/schemas/LocationCoverage"
            },
            "type": "array",
            "title": "Locations"
          }
        },
        "type": "object",
        "required": [
          "label",
          "locations"
        ],
        "title": "ParentCoverage"
      },
      "PlainTextContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "text": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Text",
            "description": "Text content of the plain text content object"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "text"
        ],
        "title": "PlainTextContentCreate"
      },
      "PlainTextContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "text": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Text",
            "description": "Text content of the plain text content object"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "text"
        ],
        "title": "PlainTextContentRead"
      },
      "PlainTextContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "text": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 102400,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Text",
            "description": "Text content of the plain text content object",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "PlainTextContentUpdate"
      },
      "PlainTextResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/CommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralPlainTextResourceConfig",
            "default": {
              "defaultCollapsed": false,
              "focusView": {
                "delimiter": " / ",
                "singleLine": true
              },
              "searchReplacements": [],
              "contentCss": []
            }
          },
          "plainText": {
            "$ref": "#/components/schemas/PlainTextSpecialConfig",
            "default": {
              "lineLabelling": {
                "enabled": false,
                "labellingType": "numbersOneBased"
              },
              "deeplLinks": {
                "enabled": false
              }
            }
          }
        },
        "type": "object",
        "title": "PlainTextResourceConfig"
      },
      "PlainTextResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/PlainTextResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "contentCss": [],
                "defaultCollapsed": false,
                "focusView": {
                  "delimiter": " / ",
                  "singleLine": true
                },
                "searchReplacements": []
              },
              "plainText": {
                "deeplLinks": {
                  "enabled": false
                },
                "lineLabelling": {
                  "enabled": false,
                  "labellingType": "numbersOneBased"
                }
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "PlainTextResourceCreate"
      },
      "PlainTextResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/PlainTextResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "contentCss": [],
                "defaultCollapsed": false,
                "focusView": {
                  "delimiter": " / ",
                  "singleLine": true
                },
                "searchReplacements": []
              },
              "plainText": {
                "deeplLinks": {
                  "enabled": false
                },
                "lineLabelling": {
                  "enabled": false,
                  "labellingType": "numbersOneBased"
                }
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "PlainTextResourceRead"
      },
      "PlainTextResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "plainText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PlainTextResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "PlainTextResourceUpdate"
      },
      "PlainTextSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "plainText",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "text": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Text",
            "description": "Text content search query",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "PlainTextSearchQuery"
      },
      "PlainTextSpecialConfig": {
        "properties": {
          "lineLabelling": {
            "$ref": "#/components/schemas/LineLabellingConfig",
            "default": {
              "enabled": false,
              "labellingType": "numbersOneBased"
            }
          },
          "deeplLinks": {
            "$ref": "#/components/schemas/DeepLLinksConfig",
            "default": {
              "enabled": false
            }
          }
        },
        "type": "object",
        "title": "PlainTextSpecialConfig",
        "description": "Config properties specific to the plain text resource type"
      },
      "PlatformData": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/TextRead"
            },
            "type": "array",
            "title": "Texts"
          },
          "state": {
            "$ref": "#/components/schemas/PlatformStateRead"
          },
          "security": {
            "$ref": "#/components/schemas/PlatformSecurityInfo"
          },
          "systemSegments": {
            "items": {
              "$ref": "#/components/schemas/ClientSegmentRead"
            },
            "type": "array",
            "title": "Systemsegments"
          },
          "infoSegments": {
            "items": {
              "$ref": "#/components/schemas/ClientSegmentHead"
            },
            "type": "array",
            "title": "Infosegments"
          },
          "tekst": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Tekst"
          }
        },
        "type": "object",
        "required": [
          "texts",
          "state",
          "security",
          "systemSegments",
          "infoSegments",
          "tekst"
        ],
        "title": "PlatformData",
        "description": "Platform data used by the web client"
      },
      "PlatformDescriptionTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Translation"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "PlatformDescriptionTranslation"
      },
      "PlatformSecurityInfo": {
        "properties": {
          "closedMode": {
            "type": "boolean",
            "title": "Closedmode",
            "default": false
          },
          "usersActiveByDefault": {
            "type": "boolean",
            "title": "Usersactivebydefault",
            "default": false
          },
          "enableCookieAuth": {
            "type": "boolean",
            "title": "Enablecookieauth",
            "default": true
          },
          "enableJwtAuth": {
            "type": "boolean",
            "title": "Enablejwtauth",
            "default": false
          },
          "authCookieLifetime": {
            "type": "integer",
            "title": "Authcookielifetime",
            "default": 10800
          }
        },
        "type": "object",
        "title": "PlatformSecurityInfo"
      },
      "PlatformStateRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "platformName": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Platformname",
            "description": "Name of the platform",
            "default": "Tekst-Dev"
          },
          "platformSubtitle": {
            "items": {
              "$ref": "#/components/schemas/PlatformDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Platformsubtitle",
            "description": "Short description of the platform, in multiple languages",
            "default": [
              {
                "locale": "*",
                "translation": "An online text research platform"
              }
            ]
          },
          "availableLocales": {
            "items": {
              "$ref": "#/components/schemas/LocaleKey"
            },
            "type": "array",
            "maxItems": 2,
            "minItems": 1,
            "title": "Availablelocales",
            "description": "Locales available for use in platform client",
            "default": [
              "deDE",
              "enUS"
            ]
          },
          "defaultTextId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaulttextid",
            "description": "Default text to load in UI"
          },
          "indexUnpublishedResources": {
            "type": "boolean",
            "title": "Indexunpublishedresources",
            "description": "Index unpublished resources",
            "default": false
          },
          "directJumpOnUniqueAliasSearch": {
            "type": "boolean",
            "title": "Directjumponuniquealiassearch",
            "description": "Directly jump to respective location when searching for unique location alias",
            "default": true
          },
          "navBrowseEntry": {
            "items": {
              "$ref": "#/components/schemas/MainNavEntryTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Navbrowseentry",
            "description": "Custom label for main navigation browse entry",
            "default": []
          },
          "navSearchEntry": {
            "items": {
              "$ref": "#/components/schemas/MainNavEntryTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Navsearchentry",
            "description": "Custom label for main navigation search entry",
            "default": []
          },
          "navInfoEntry": {
            "items": {
              "$ref": "#/components/schemas/MainNavEntryTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Navinfoentry",
            "description": "Custom label for main navigation info entry",
            "default": []
          },
          "showResourceCategoryHeadings": {
            "type": "boolean",
            "title": "Showresourcecategoryheadings",
            "description": "Show resource category headings in browse view",
            "default": true
          },
          "prioritizeBrowseLevelResources": {
            "type": "boolean",
            "title": "Prioritizebrowselevelresources",
            "description": "Display resources of current browse level before others in browse view",
            "default": true
          },
          "showLocationAliases": {
            "type": "boolean",
            "title": "Showlocationaliases",
            "description": "Show location aliases in browse view",
            "default": true
          },
          "showLogoOnLoadingScreen": {
            "type": "boolean",
            "title": "Showlogoonloadingscreen",
            "description": "Show logo on loading screen",
            "default": true
          },
          "showLogoInHeader": {
            "type": "boolean",
            "title": "Showlogoinheader",
            "description": "Show logo in page header",
            "default": true
          },
          "showTekstFooterHint": {
            "type": "boolean",
            "title": "Showtekstfooterhint",
            "description": "Show a small hint to the Tekst software in the footer",
            "default": true
          },
          "denyResourceTypes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Denyresourcetypes",
            "description": "Resource types regular users are not allowed to create",
            "default": [
              "apiCall"
            ]
          },
          "fonts": {
            "items": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1
            },
            "type": "array",
            "maxItems": 64,
            "title": "Fonts",
            "description": "CSS font family names for use in resources",
            "default": []
          },
          "oskModes": {
            "items": {
              "$ref": "#/components/schemas/OskMode"
            },
            "type": "array",
            "title": "Oskmodes",
            "description": "OSK modes available for use in platform client",
            "default": []
          },
          "indicesUpdatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Indicesupdatedat",
            "description": "Time when indices were created"
          },
          "dbVersion": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              }
            ],
            "title": "Dbversion",
            "description": "Version string of DB data"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id"
        ],
        "title": "PlatformStateRead"
      },
      "PlatformStateUpdate": {
        "properties": {
          "platformName": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Platformname",
            "description": "Name of the platform",
            "optionalNullable": false
          },
          "platformSubtitle": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PlatformDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Platformsubtitle",
            "description": "Short description of the platform, in multiple languages",
            "optionalNullable": false
          },
          "availableLocales": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LocaleKey"
                },
                "type": "array",
                "maxItems": 2,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Availablelocales",
            "description": "Locales available for use in platform client",
            "optionalNullable": false
          },
          "defaultTextId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaulttextid",
            "description": "Default text to load in UI",
            "optionalNullable": true
          },
          "indexUnpublishedResources": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Indexunpublishedresources",
            "description": "Index unpublished resources",
            "optionalNullable": false
          },
          "directJumpOnUniqueAliasSearch": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directjumponuniquealiassearch",
            "description": "Directly jump to respective location when searching for unique location alias",
            "optionalNullable": false
          },
          "navBrowseEntry": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MainNavEntryTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Navbrowseentry",
            "description": "Custom label for main navigation browse entry",
            "optionalNullable": false
          },
          "navSearchEntry": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MainNavEntryTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Navsearchentry",
            "description": "Custom label for main navigation search entry",
            "optionalNullable": false
          },
          "navInfoEntry": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MainNavEntryTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Navinfoentry",
            "description": "Custom label for main navigation info entry",
            "optionalNullable": false
          },
          "showResourceCategoryHeadings": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Showresourcecategoryheadings",
            "description": "Show resource category headings in browse view",
            "optionalNullable": false
          },
          "prioritizeBrowseLevelResources": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prioritizebrowselevelresources",
            "description": "Display resources of current browse level before others in browse view",
            "optionalNullable": false
          },
          "showLocationAliases": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Showlocationaliases",
            "description": "Show location aliases in browse view",
            "optionalNullable": false
          },
          "showLogoOnLoadingScreen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Showlogoonloadingscreen",
            "description": "Show logo on loading screen",
            "optionalNullable": false
          },
          "showLogoInHeader": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Showlogoinheader",
            "description": "Show logo in page header",
            "optionalNullable": false
          },
          "showTekstFooterHint": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Showtekstfooterhint",
            "description": "Show a small hint to the Tekst software in the footer",
            "optionalNullable": false
          },
          "denyResourceTypes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Denyresourcetypes",
            "description": "Resource types regular users are not allowed to create",
            "optionalNullable": false
          },
          "fonts": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 32,
                  "minLength": 1
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonts",
            "description": "CSS font family names for use in resources",
            "optionalNullable": false
          },
          "oskModes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OskMode"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oskmodes",
            "description": "OSK modes available for use in platform client",
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "PlatformStateUpdate"
      },
      "PrivateUserProp": {
        "type": "string",
        "enum": [
          "name",
          "affiliation",
          "bio"
        ]
      },
      "PrivateUserProps": {
        "items": {
          "$ref": "#/components/schemas/PrivateUserProp"
        },
        "type": "array",
        "maxItems": 3
      },
      "PublicUsersSearchResult": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserReadPublic"
            },
            "type": "array",
            "title": "Users",
            "description": "Paginated public users data",
            "default": []
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of search hits",
            "default": 0
          }
        },
        "type": "object",
        "title": "PublicUsersSearchResult"
      },
      "QuickSearchRequestBody": {
        "properties": {
          "type": {
            "type": "string",
            "const": "quick",
            "title": "Type",
            "description": "Search type",
            "default": "quick"
          },
          "q": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Q",
            "description": "Query string",
            "default": "*",
            "optionalNullable": true
          },
          "gen": {
            "$ref": "#/components/schemas/GeneralSearchSettings",
            "description": "General search settings",
            "default": {
              "pgn": {
                "pg": 1,
                "pgs": 10
              },
              "strict": false
            },
            "optionalNullable": false
          },
          "qck": {
            "$ref": "#/components/schemas/QuickSearchSettings",
            "description": "Quick search settings",
            "default": {
              "op": "OR",
              "re": false,
              "inh": false,
              "allLvls": false
            },
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "QuickSearchRequestBody"
      },
      "QuickSearchSettings": {
        "properties": {
          "op": {
            "type": "string",
            "enum": [
              "AND",
              "OR"
            ],
            "title": "Op",
            "description": "Default operator",
            "default": "OR",
            "optionalNullable": false
          },
          "re": {
            "type": "boolean",
            "title": "Re",
            "description": "Whether to use regular expressions",
            "default": false,
            "optionalNullable": false
          },
          "inh": {
            "type": "boolean",
            "title": "Inh",
            "description": "Whether to match contents inherited from higher-level locations",
            "default": false,
            "optionalNullable": false
          },
          "allLvls": {
            "type": "boolean",
            "title": "Alllvls",
            "description": "Whether to find locations from all levels, as opposed to only finding locations from the respective text's default level",
            "default": false,
            "optionalNullable": false
          },
          "txt": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Txt",
            "description": "IDs of texts to search in",
            "optionalNullable": true
          }
        },
        "type": "object",
        "title": "QuickSearchSettings"
      },
      "ResourceCategory": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "title": "Key",
            "description": "Key identifying this resource category"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/ResourceCategoryTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Translations"
          }
        },
        "type": "object",
        "required": [
          "key",
          "translations"
        ],
        "title": "ResourceCategory"
      },
      "ResourceCategoryTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Translation",
            "description": "Translation of a resource category"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "ResourceCategoryTranslation"
      },
      "ResourceCommentTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Translation",
            "description": "Comment translation HTML for this resource"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "ResourceCommentTranslation"
      },
      "ResourceCoverage": {
        "properties": {
          "covered": {
            "type": "integer",
            "title": "Covered"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "ranges": {
            "items": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "array",
            "title": "Ranges"
          },
          "rangesCovered": {
            "type": "boolean",
            "title": "Rangescovered"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/ParentCoverage"
            },
            "type": "array",
            "title": "Details"
          }
        },
        "type": "object",
        "required": [
          "covered",
          "total",
          "ranges",
          "rangesCovered",
          "details"
        ],
        "title": "ResourceCoverage"
      },
      "ResourceDescriptionTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 512,
            "minLength": 1,
            "title": "Translation",
            "description": "Description translation for this resource"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "ResourceDescriptionTranslation"
      },
      "ResourceSearchQuery": {
        "properties": {
          "cmn": {
            "$ref": "#/components/schemas/CommonResourceSearchQueryData",
            "description": "Common resource search query data"
          },
          "rts": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/AudioSearchQuery"
              },
              {
                "$ref": "#/components/schemas/ExternalReferencesSearchQuery"
              },
              {
                "$ref": "#/components/schemas/ImagesSearchQuery"
              },
              {
                "$ref": "#/components/schemas/LocationMetadataSearchQuery"
              },
              {
                "$ref": "#/components/schemas/PlainTextSearchQuery"
              },
              {
                "$ref": "#/components/schemas/RichTextSearchQuery"
              },
              {
                "$ref": "#/components/schemas/TextAnnotationSearchQuery"
              }
            ],
            "title": "Rts",
            "description": "Resource type-specific search query data",
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "audio": "#/components/schemas/AudioSearchQuery",
                "externalReferences": "#/components/schemas/ExternalReferencesSearchQuery",
                "images": "#/components/schemas/ImagesSearchQuery",
                "locationMetadata": "#/components/schemas/LocationMetadataSearchQuery",
                "plainText": "#/components/schemas/PlainTextSearchQuery",
                "richText": "#/components/schemas/RichTextSearchQuery",
                "textAnnotation": "#/components/schemas/TextAnnotationSearchQuery"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "cmn",
          "rts"
        ],
        "title": "ResourceSearchQuery"
      },
      "ResourceTitleTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Translation",
            "description": "Title translation for this resource"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "ResourceTitleTranslation"
      },
      "RichTextContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "html": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Html",
            "description": "HTML content of the rich text content object"
          },
          "editorMode": {
            "type": "string",
            "enum": [
              "wysiwyg",
              "html"
            ],
            "title": "Editormode",
            "description": "Last used editor mode for this content",
            "default": "wysiwyg"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "html"
        ],
        "title": "RichTextContentCreate"
      },
      "RichTextContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "html": {
            "type": "string",
            "maxLength": 102400,
            "minLength": 1,
            "title": "Html",
            "description": "HTML content of the rich text content object"
          },
          "editorMode": {
            "type": "string",
            "enum": [
              "wysiwyg",
              "html"
            ],
            "title": "Editormode",
            "description": "Last used editor mode for this content",
            "default": "wysiwyg"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "html"
        ],
        "title": "RichTextContentRead"
      },
      "RichTextContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "html": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 102400,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Html",
            "description": "HTML content of the rich text content object",
            "optionalNullable": false
          },
          "editorMode": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "wysiwyg",
                  "html"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Editormode",
            "description": "Last used editor mode for this content",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "RichTextContentUpdate"
      },
      "RichTextModifiedCommonResourceConfig": {
        "properties": {
          "category": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 1
              }
            ],
            "title": "Category",
            "description": "Resource category key"
          },
          "sortOrder": {
            "type": "integer",
            "maximum": 1000.0,
            "minimum": 0.0,
            "title": "Sortorder",
            "description": "Sort order for displaying this resource among others",
            "default": 10
          },
          "defaultActive": {
            "type": "boolean",
            "title": "Defaultactive",
            "description": "Whether this resource is active by default when public",
            "default": true,
            "optionalNullable": false
          },
          "enableContentContext": {
            "type": "boolean",
            "const": false,
            "title": "Enablecontentcontext",
            "description": "Whether contents of this resource should be available for the parent level (always false for rich text resources)",
            "default": false,
            "optionalNullable": false
          },
          "searchableQuick": {
            "type": "boolean",
            "title": "Searchablequick",
            "description": "Whether this resource should be included in quick search",
            "default": true,
            "optionalNullable": false
          },
          "searchableAdv": {
            "type": "boolean",
            "title": "Searchableadv",
            "description": "Whether this resource should accessible via advanced search",
            "default": true,
            "optionalNullable": false
          },
          "rtl": {
            "type": "boolean",
            "title": "Rtl",
            "description": "Whether to display text contents in right-to-left direction",
            "default": false,
            "optionalNullable": false
          },
          "osk": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "description": "Key identifying an OSK mode"
              },
              {
                "type": "null"
              }
            ],
            "title": "Osk"
          }
        },
        "type": "object",
        "title": "RichTextModifiedCommonResourceConfig"
      },
      "RichTextResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/RichTextModifiedCommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralRichTextResourceConfig",
            "default": {
              "defaultCollapsed": true,
              "searchReplacements": [],
              "contentCss": []
            }
          }
        },
        "type": "object",
        "title": "RichTextResourceConfig"
      },
      "RichTextResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/RichTextResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "contentCss": [],
                "defaultCollapsed": true,
                "searchReplacements": []
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "RichTextResourceCreate"
      },
      "RichTextResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/RichTextResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "contentCss": [],
                "defaultCollapsed": true,
                "searchReplacements": []
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "RichTextResourceRead"
      },
      "RichTextResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "richText",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RichTextResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "RichTextResourceUpdate"
      },
      "RichTextSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "richText",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "html": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Html",
            "description": "HTML text content search query",
            "default": "",
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "RichTextSearchQuery"
      },
      "SearchHit": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "label": {
            "type": "string",
            "title": "Label"
          },
          "fullLabel": {
            "type": "string",
            "title": "Fulllabel"
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "title": "Level"
          },
          "position": {
            "type": "integer",
            "title": "Position"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "highlight": {
            "additionalProperties": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Highlight",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "label",
          "fullLabel",
          "textId",
          "level",
          "position",
          "score"
        ],
        "title": "SearchHit"
      },
      "SearchReplacement": {
        "properties": {
          "pattern": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Pattern",
            "description": "Regular expression to match (Java RegEx syntax)"
          },
          "replacement": {
            "type": "string",
            "maxLength": 64,
            "minLength": 0,
            "title": "Replacement",
            "description": "Replacement string"
          }
        },
        "type": "object",
        "required": [
          "pattern",
          "replacement"
        ],
        "title": "SearchReplacement"
      },
      "SearchReplacements": {
        "items": {
          "$ref": "#/components/schemas/SearchReplacement"
        },
        "type": "array",
        "maxItems": 16,
        "minItems": 0
      },
      "SearchResults": {
        "properties": {
          "hits": {
            "items": {
              "$ref": "#/components/schemas/SearchHit"
            },
            "type": "array",
            "title": "Hits"
          },
          "took": {
            "type": "integer",
            "title": "Took"
          },
          "totalHits": {
            "type": "integer",
            "title": "Totalhits"
          },
          "totalHitsRelation": {
            "type": "string",
            "enum": [
              "eq",
              "gte"
            ],
            "title": "Totalhitsrelation"
          },
          "maxScore": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxscore"
          }
        },
        "type": "object",
        "required": [
          "hits",
          "took",
          "totalHits",
          "totalHitsRelation",
          "maxScore"
        ],
        "title": "SearchResults"
      },
      "SortingPreset": {
        "type": "string",
        "enum": [
          "relevance",
          "text_level_position",
          "text_level_relevance"
        ]
      },
      "TaskRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "type": {
            "$ref": "#/components/schemas/TaskType",
            "description": "Type of the task"
          },
          "targetId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1
              }
            ],
            "title": "Targetid",
            "description": "ID of the target of the task or None if there is no target"
          },
          "userId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Userid",
            "description": "ID of user who created this task (or none if this is a system task)"
          },
          "pickupKey": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Pickupkey",
            "description": "Pickup key for accessing the task in case tasks are requested by a non-authenticated user"
          },
          "status": {
            "type": "string",
            "enum": [
              "waiting",
              "running",
              "done",
              "failed"
            ],
            "title": "Status",
            "description": "Status of the task"
          },
          "startTime": {
            "type": "string",
            "format": "date-time",
            "title": "Starttime",
            "description": "Time when the task was started"
          },
          "endTime": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Endtime",
            "description": "Time when the task has ended"
          },
          "durationSeconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Durationseconds",
            "description": "Duration of the finished task in seconds"
          },
          "result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result",
            "description": "Result data of the task"
          },
          "error": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "minLength": 1
              }
            ],
            "title": "Error",
            "description": "Error message if the task failed"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "type",
          "pickupKey",
          "status",
          "startTime"
        ],
        "title": "TaskRead"
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "indices_create_update",
          "resource_import",
          "resource_export",
          "search_export",
          "broadcast_user_ntfc",
          "broadcast_admin_ntfc",
          "resource_precompute_hook",
          "structure_update",
          "platform_cleanup"
        ],
        "title": "TaskType",
        "description": "Task types with locking and artifact flags"
      },
      "TekstErrorModel": {
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/ErrorDetail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "TekstErrorModel"
      },
      "TextAnnotationContentCreate": {
        "properties": {
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "tokens": {
            "items": {
              "$ref": "#/components/schemas/TextAnnotationToken"
            },
            "type": "array",
            "maxItems": 1024,
            "title": "Tokens",
            "description": "List of annotated tokens in this content object"
          }
        },
        "type": "object",
        "required": [
          "resourceId",
          "resourceType",
          "locationId",
          "tokens"
        ],
        "title": "TextAnnotationContentCreate"
      },
      "TextAnnotationContentRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Resourceid",
            "description": "Resource ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "locationId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Locationid",
            "description": "Text location ID",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content"
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content"
          },
          "tokens": {
            "items": {
              "$ref": "#/components/schemas/TextAnnotationToken"
            },
            "type": "array",
            "maxItems": 1024,
            "title": "Tokens",
            "description": "List of annotated tokens in this content object"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "resourceId",
          "resourceType",
          "locationId",
          "tokens"
        ],
        "title": "TextAnnotationContentRead"
      },
      "TextAnnotationContentUpdate": {
        "properties": {
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "comment": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 50000,
                "minLength": 1
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment that will be displayed with the content",
            "optionalNullable": false
          },
          "notes": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 1000,
                "minLength": 1
              }
            ],
            "title": "Notes",
            "description": "Plain text, potentially multiline working notes on this content meant as an aid for people editing this content",
            "optionalNullable": false
          },
          "tokens": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TextAnnotationToken"
                },
                "type": "array",
                "maxItems": 1024
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens",
            "description": "List of annotated tokens in this content object",
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "TextAnnotationContentUpdate"
      },
      "TextAnnotationEntry": {
        "properties": {
          "key": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Key",
            "description": "Key of the annotation"
          },
          "value": {
            "items": {
              "$ref": "#/components/schemas/TextAnnotationValue"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 1,
            "title": "Value",
            "description": "List of values of an annotation"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "TextAnnotationEntry"
      },
      "TextAnnotationQueryEntry": {
        "properties": {
          "k": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "K",
            "description": "Key of the annotation"
          },
          "v": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 256,
                "minLength": 0
              }
            ],
            "title": "V",
            "description": "Value of the annotation"
          },
          "wc": {
            "type": "boolean",
            "title": "Wc",
            "description": "Whether to interpret wildcards in the annotation value query",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "k"
        ],
        "title": "TextAnnotationQueryEntry"
      },
      "TextAnnotationResourceConfig": {
        "properties": {
          "common": {
            "$ref": "#/components/schemas/CommonResourceConfig",
            "default": {
              "sortOrder": 10,
              "defaultActive": true,
              "enableContentContext": false,
              "searchableQuick": true,
              "searchableAdv": true,
              "rtl": false
            }
          },
          "general": {
            "$ref": "#/components/schemas/GeneralTextAnnotationResourceConfig",
            "default": {
              "defaultCollapsed": false
            }
          },
          "textAnnotation": {
            "$ref": "#/components/schemas/TextAnnotationSpecialConfig",
            "default": {
              "annotationGroups": [],
              "multiValueDelimiter": "/"
            }
          }
        },
        "type": "object",
        "title": "TextAnnotationResourceConfig"
      },
      "TextAnnotationResourceCreate": {
        "properties": {
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/TextAnnotationResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "textAnnotation": {
                "annotationGroups": [],
                "multiValueDelimiter": "/"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "TextAnnotationResourceCreate"
      },
      "TextAnnotationResourceRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "writable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Writable",
            "description": "Whether this resource is writable for the requesting user"
          },
          "owner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "Public user data for user owning this resource"
          },
          "sharedReadUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedreadusers",
            "description": "Public user data for users allowed to read this resource"
          },
          "sharedWriteUsers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserReadPublic"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwriteusers",
            "description": "Public user data for users allowed to write this resource"
          },
          "title": {
            "items": {
              "$ref": "#/components/schemas/ResourceTitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Title",
            "description": "Title of this resource"
          },
          "description": {
            "items": {
              "$ref": "#/components/schemas/ResourceDescriptionTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Description",
            "description": "Short, concise description of this resource",
            "default": []
          },
          "textId": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Textid",
            "description": "ID of the text this resource belongs to",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "level": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Level",
            "description": "Text level this resource belongs to"
          },
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original"
          },
          "ownerId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ownerid",
            "description": "User owning this resource"
          },
          "sharedRead": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "default": []
          },
          "sharedWrite": {
            "items": {
              "type": "string",
              "maxLength": 24,
              "minLength": 24,
              "pattern": "^[0-9a-f]{24}$",
              "example": "5eb7cf5a86d9755df3a6c593"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "default": []
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "description": "Publication status of this resource",
            "default": false
          },
          "proposed": {
            "type": "boolean",
            "title": "Proposed",
            "description": "Whether this resource has been proposed for publication",
            "default": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource"
          },
          "meta": {
            "items": {
              "$ref": "#/components/schemas/MetadataEntry"
            },
            "type": "array",
            "maxItems": 64,
            "minItems": 0,
            "title": "Meta",
            "description": "Arbitrary metadata",
            "default": []
          },
          "comment": {
            "items": {
              "$ref": "#/components/schemas/ResourceCommentTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "default": []
          },
          "config": {
            "$ref": "#/components/schemas/TextAnnotationResourceConfig",
            "default": {
              "common": {
                "defaultActive": true,
                "enableContentContext": false,
                "rtl": false,
                "searchableAdv": true,
                "searchableQuick": true,
                "sortOrder": 10
              },
              "general": {
                "defaultCollapsed": false
              },
              "textAnnotation": {
                "annotationGroups": [],
                "multiValueDelimiter": "/"
              }
            }
          },
          "contentsChangedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Contentschangedat",
            "description": "The last time contents of this resource changed",
            "default": "1970-01-02T00:00:00"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "textId",
          "level",
          "resourceType"
        ],
        "title": "TextAnnotationResourceRead"
      },
      "TextAnnotationResourceUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceTitleTranslation"
                },
                "type": "array",
                "maxItems": 3,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this resource",
            "optionalNullable": false
          },
          "description": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceDescriptionTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Short, concise description of this resource",
            "optionalNullable": false
          },
          "resourceType": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Resourcetype"
          },
          "originalId": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Originalid",
            "description": "If this is a version of another resource, this ID references the original",
            "optionalNullable": true
          },
          "sharedRead": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedread",
            "description": "Users with shared read access to this resource",
            "optionalNullable": false
          },
          "sharedWrite": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": "^[0-9a-f]{24}$",
                  "example": "5eb7cf5a86d9755df3a6c593"
                },
                "type": "array",
                "maxItems": 64
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharedwrite",
            "description": "Users with shared write access to this resource",
            "optionalNullable": false
          },
          "citation": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Citation",
            "description": "Citation details for this resource",
            "optionalNullable": false
          },
          "meta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MetadataEntry"
                },
                "type": "array",
                "maxItems": 64,
                "minItems": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta",
            "description": "Arbitrary metadata",
            "optionalNullable": false
          },
          "comment": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCommentTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Plain text, potentially multiline comment on this resource",
            "optionalNullable": false
          },
          "config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextAnnotationResourceConfig"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          }
        },
        "type": "object",
        "required": [
          "resourceType"
        ],
        "title": "TextAnnotationResourceUpdate"
      },
      "TextAnnotationSearchQuery": {
        "properties": {
          "type": {
            "type": "string",
            "const": "textAnnotation",
            "title": "Type",
            "description": "Type of the resource to search in"
          },
          "token": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "title": "Token",
            "description": "Token search query",
            "default": "",
            "optionalNullable": true
          },
          "twc": {
            "type": "boolean",
            "title": "Twc",
            "description": "Whether to interpret wildcards in the token query",
            "default": false,
            "optionalNullable": true
          },
          "anno": {
            "items": {
              "$ref": "#/components/schemas/TextAnnotationQueryEntry"
            },
            "type": "array",
            "maxItems": 64,
            "title": "Anno",
            "description": "List of annotations to match",
            "default": [],
            "optionalNullable": true
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "TextAnnotationSearchQuery"
      },
      "TextAnnotationSpecialConfig": {
        "properties": {
          "annotationGroups": {
            "items": {
              "$ref": "#/components/schemas/AnnotationGroup"
            },
            "type": "array",
            "maxItems": 32,
            "title": "Annotationgroups",
            "description": "Display groups to use for grouping annotations",
            "default": []
          },
          "displayTemplate": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 4096,
                "minLength": 1
              }
            ],
            "title": "Displaytemplate",
            "description": "Template string used for displaying the annotations in the web client(if missing, all annotations are displayed with key and value,separated by commas)"
          },
          "multiValueDelimiter": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1,
            "title": "Multivaluedelimiter",
            "description": "String used to delimit multiple values for an annotation",
            "default": "/"
          }
        },
        "type": "object",
        "title": "TextAnnotationSpecialConfig",
        "description": "Config properties specific to the text annotation resource type"
      },
      "TextAnnotationToken": {
        "properties": {
          "token": {
            "type": "string",
            "maxLength": 4096,
            "minLength": 1,
            "title": "Token",
            "description": "Text token"
          },
          "annotations": {
            "items": {
              "$ref": "#/components/schemas/TextAnnotationEntry"
            },
            "type": "array",
            "maxItems": 128,
            "title": "Annotations",
            "description": "List of annotations on this token",
            "default": []
          },
          "lb": {
            "type": "boolean",
            "title": "Lb",
            "description": "Whether this token ends a line",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "token"
        ],
        "title": "TextAnnotationToken"
      },
      "TextAnnotationValue": {
        "type": "string",
        "maxLength": 256,
        "minLength": 1
      },
      "TextCreate": {
        "properties": {
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Title",
            "description": "Title of this text"
          },
          "slug": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "pattern": "^[a-z0-9]+$",
            "title": "Slug",
            "description": "A short identifier for use in URLs and internal operations"
          },
          "subtitle": {
            "items": {
              "$ref": "#/components/schemas/TextSubtitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Subtitle",
            "description": "Subtitle translations of this text (if set, it must contain at least one element)",
            "default": []
          },
          "levels": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/TextLevelTranslation"
              },
              "type": "array",
              "maxItems": 3
            },
            "type": "array",
            "maxItems": 32,
            "minItems": 1,
            "title": "Levels",
            "description": "Structure levels of this text and their label translations"
          },
          "defaultLevel": {
            "type": "integer",
            "maximum": 32.0,
            "minimum": 0.0,
            "title": "Defaultlevel",
            "description": "Default structure level for the client to use for browsing this text",
            "default": 0
          },
          "locDelim": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1,
            "pattern": "[^\\n\\r]+",
            "title": "Locdelim",
            "description": "Delimiter for displaying text locations",
            "default": ", "
          },
          "labeledLocation": {
            "type": "boolean",
            "title": "Labeledlocation",
            "description": "Whether the UI should label the parts of the browse location with each levels' names",
            "default": true
          },
          "accentColor": {
            "type": "string",
            "format": "color",
            "title": "Accentcolor",
            "description": "Accent color used for this text in the client UI",
            "default": "#305D97"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive",
            "description": "Whether the text should be listed for non-admin users in the web client",
            "default": false
          },
          "resourceCategories": {
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "type": "array",
            "maxItems": 32,
            "title": "Resourcecategories",
            "description": "Resource categories to categorize resources in",
            "default": []
          },
          "fullLocLabelAsHitHeading": {
            "type": "boolean",
            "title": "Fullloclabelashitheading",
            "description": "Whether to use the full location label as the hit heading in the search results",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title",
          "slug",
          "levels"
        ],
        "title": "TextCreate"
      },
      "TextLevelTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "title": "Translation",
            "description": "Translation of a text level label"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "TextLevelTranslation"
      },
      "TextRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "title": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Title",
            "description": "Title of this text"
          },
          "slug": {
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "pattern": "^[a-z0-9]+$",
            "title": "Slug",
            "description": "A short identifier for use in URLs and internal operations"
          },
          "subtitle": {
            "items": {
              "$ref": "#/components/schemas/TextSubtitleTranslation"
            },
            "type": "array",
            "maxItems": 3,
            "title": "Subtitle",
            "description": "Subtitle translations of this text (if set, it must contain at least one element)",
            "default": []
          },
          "levels": {
            "items": {
              "items": {
                "$ref": "#/components/schemas/TextLevelTranslation"
              },
              "type": "array",
              "maxItems": 3
            },
            "type": "array",
            "maxItems": 32,
            "minItems": 1,
            "title": "Levels",
            "description": "Structure levels of this text and their label translations"
          },
          "defaultLevel": {
            "type": "integer",
            "maximum": 32.0,
            "minimum": 0.0,
            "title": "Defaultlevel",
            "description": "Default structure level for the client to use for browsing this text",
            "default": 0
          },
          "locDelim": {
            "type": "string",
            "maxLength": 3,
            "minLength": 1,
            "pattern": "[^\\n\\r]+",
            "title": "Locdelim",
            "description": "Delimiter for displaying text locations",
            "default": ", "
          },
          "labeledLocation": {
            "type": "boolean",
            "title": "Labeledlocation",
            "description": "Whether the UI should label the parts of the browse location with each levels' names",
            "default": true
          },
          "accentColor": {
            "type": "string",
            "format": "color",
            "title": "Accentcolor",
            "description": "Accent color used for this text in the client UI",
            "default": "#305D97"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive",
            "description": "Whether the text should be listed for non-admin users in the web client",
            "default": false
          },
          "resourceCategories": {
            "items": {
              "$ref": "#/components/schemas/ResourceCategory"
            },
            "type": "array",
            "maxItems": 32,
            "title": "Resourcecategories",
            "description": "Resource categories to categorize resources in",
            "default": []
          },
          "fullLocLabelAsHitHeading": {
            "type": "boolean",
            "title": "Fullloclabelashitheading",
            "description": "Whether to use the full location label as the hit heading in the search results",
            "default": false
          },
          "indexUtd": {
            "type": "boolean",
            "title": "Indexutd",
            "description": "The search index for this text is up-to-date",
            "default": false
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "levels"
        ],
        "title": "TextRead"
      },
      "TextSubtitleTranslation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/TranslationLocaleKey"
          },
          "translation": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "title": "Translation",
            "description": "Subtitle translation for a text"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "translation"
        ],
        "title": "TextSubtitleTranslation"
      },
      "TextUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Title of this text",
            "optionalNullable": false
          },
          "slug": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "pattern": "^[a-z0-9]+$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug",
            "description": "A short identifier for use in URLs and internal operations",
            "optionalNullable": false
          },
          "subtitle": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/TextSubtitleTranslation"
                },
                "type": "array",
                "maxItems": 3
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle",
            "description": "Subtitle translations of this text (if set, it must contain at least one element)",
            "optionalNullable": false
          },
          "levels": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "$ref": "#/components/schemas/TextLevelTranslation"
                  },
                  "type": "array",
                  "maxItems": 3
                },
                "type": "array",
                "maxItems": 32,
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Levels",
            "description": "Structure levels of this text and their label translations",
            "optionalNullable": false
          },
          "defaultLevel": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 32.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Defaultlevel",
            "description": "Default structure level for the client to use for browsing this text",
            "optionalNullable": false
          },
          "locDelim": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 3,
                "minLength": 1,
                "pattern": "[^\\n\\r]+"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locdelim",
            "description": "Delimiter for displaying text locations",
            "optionalNullable": false
          },
          "labeledLocation": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Labeledlocation",
            "description": "Whether the UI should label the parts of the browse location with each levels' names",
            "optionalNullable": false
          },
          "accentColor": {
            "anyOf": [
              {
                "type": "string",
                "format": "color"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accentcolor",
            "description": "Accent color used for this text in the client UI",
            "optionalNullable": false
          },
          "isActive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isactive",
            "description": "Whether the text should be listed for non-admin users in the web client",
            "optionalNullable": false
          },
          "resourceCategories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ResourceCategory"
                },
                "type": "array",
                "maxItems": 32
              },
              {
                "type": "null"
              }
            ],
            "title": "Resourcecategories",
            "description": "Resource categories to categorize resources in",
            "optionalNullable": false
          },
          "fullLocLabelAsHitHeading": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fullloclabelashitheading",
            "description": "Whether to use the full location label as the hit heading in the search results",
            "optionalNullable": false
          }
        },
        "type": "object",
        "title": "TextUpdate"
      },
      "TranslationLocaleKey": {
        "type": "string",
        "enum": [
          "deDE",
          "enUS",
          "*"
        ]
      },
      "UserCreate": {
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive",
            "default": false
          },
          "isSuperuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issuperuser",
            "default": false
          },
          "isVerified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isverified",
            "default": false
          },
          "username": {
            "type": "string",
            "maxLength": 16,
            "minLength": 4,
            "pattern": "[a-zA-Z0-9\\-_]+",
            "title": "Username",
            "description": "Public username of this user"
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Full name of this user"
          },
          "affiliation": {
            "type": "string",
            "maxLength": 180,
            "minLength": 1,
            "title": "Affiliation",
            "description": "Affiliation info of this user"
          },
          "locale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocaleKey"
              },
              {
                "type": "null"
              }
            ],
            "description": "Key of the locale used by this user"
          },
          "avatarUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Avatarurl",
            "description": "URL of this user's avatar picture"
          },
          "bio": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2000,
                "minLength": 1
              }
            ],
            "title": "Bio",
            "description": "Biography of this user"
          },
          "publicFields": {
            "$ref": "#/components/schemas/PrivateUserProps",
            "default": []
          },
          "userNotificationTriggers": {
            "items": {
              "$ref": "#/components/schemas/UserNotificationTrigger"
            },
            "type": "array",
            "maxItems": 4,
            "title": "Usernotificationtriggers",
            "description": "Events that trigger notifications for this user",
            "default": [
              "messageReceived",
              "newCorrection",
              "resourceProposed",
              "resourcePublished"
            ]
          },
          "adminNotificationTriggers": {
            "items": {
              "$ref": "#/components/schemas/AdminNotificationTrigger"
            },
            "type": "array",
            "maxItems": 2,
            "title": "Adminnotificationtriggers",
            "description": "Events that trigger admin notifications for this user",
            "default": [
              "userAwaitsActivation",
              "newCorrection"
            ]
          },
          "seen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seen"
          }
        },
        "type": "object",
        "required": [
          "email",
          "password",
          "username",
          "name",
          "affiliation"
        ],
        "title": "UserCreate",
        "description": "Dataset for creating a new user"
      },
      "UserMessageCreate": {
        "properties": {
          "sender": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender",
            "description": "ID of the sender or None if this is a system message"
          },
          "recipient": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Recipient",
            "description": "ID of the recipient",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "content": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Content",
            "description": "Content of the message"
          }
        },
        "type": "object",
        "required": [
          "recipient",
          "content"
        ],
        "title": "UserMessageCreate"
      },
      "UserMessageRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "sender": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender",
            "description": "ID of the sender or None if this is a system message"
          },
          "recipient": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Recipient",
            "description": "ID of the recipient",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "content": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Content",
            "description": "Content of the message"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat",
            "description": "Time when the message was sent"
          },
          "read": {
            "type": "boolean",
            "title": "Read",
            "description": "Whether the message has been read by the recipient",
            "default": false
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted",
            "description": "ID of the user who deleted the message or None if not deleted"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "recipient",
          "content",
          "createdAt"
        ],
        "title": "UserMessageRead"
      },
      "UserMessageThread": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 24,
                "minLength": 24,
                "pattern": "^[0-9a-f]{24}$",
                "example": "5eb7cf5a86d9755df3a6c593"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "ID of the thread or None if the message is a system message"
          },
          "contact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserReadPublic"
              },
              {
                "type": "null"
              }
            ],
            "description": "User data for the other user participating in this thread"
          },
          "unread": {
            "type": "integer",
            "title": "Unread",
            "description": "Number of unread messages in this thread"
          }
        },
        "type": "object",
        "required": [
          "id",
          "contact",
          "unread"
        ],
        "title": "UserMessageThread"
      },
      "UserNotificationTrigger": {
        "type": "string",
        "enum": [
          "messageReceived",
          "newCorrection",
          "resourceProposed",
          "resourcePublished"
        ]
      },
      "UserRead": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive"
          },
          "isSuperuser": {
            "type": "boolean",
            "title": "Issuperuser"
          },
          "isVerified": {
            "type": "boolean",
            "title": "Isverified"
          },
          "username": {
            "type": "string",
            "maxLength": 16,
            "minLength": 4,
            "pattern": "[a-zA-Z0-9\\-_]+",
            "title": "Username",
            "description": "Public username of this user"
          },
          "name": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "title": "Name",
            "description": "Full name of this user"
          },
          "affiliation": {
            "type": "string",
            "maxLength": 180,
            "minLength": 1,
            "title": "Affiliation",
            "description": "Affiliation info of this user"
          },
          "locale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocaleKey"
              },
              {
                "type": "null"
              }
            ],
            "description": "Key of the locale used by this user"
          },
          "avatarUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Avatarurl",
            "description": "URL of this user's avatar picture"
          },
          "bio": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2000,
                "minLength": 1
              }
            ],
            "title": "Bio",
            "description": "Biography of this user"
          },
          "publicFields": {
            "$ref": "#/components/schemas/PrivateUserProps",
            "default": []
          },
          "userNotificationTriggers": {
            "items": {
              "$ref": "#/components/schemas/UserNotificationTrigger"
            },
            "type": "array",
            "maxItems": 4,
            "title": "Usernotificationtriggers",
            "description": "Events that trigger notifications for this user",
            "default": [
              "messageReceived",
              "newCorrection",
              "resourceProposed",
              "resourcePublished"
            ]
          },
          "adminNotificationTriggers": {
            "items": {
              "$ref": "#/components/schemas/AdminNotificationTrigger"
            },
            "type": "array",
            "maxItems": 2,
            "title": "Adminnotificationtriggers",
            "description": "Events that trigger admin notifications for this user",
            "default": [
              "userAwaitsActivation",
              "newCorrection"
            ]
          },
          "seen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seen"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "title": "Createdat"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email",
          "isActive",
          "isSuperuser",
          "isVerified",
          "username",
          "name",
          "affiliation",
          "createdAt"
        ],
        "title": "UserRead",
        "description": "A user registered in the system"
      },
      "UserReadPublic": {
        "properties": {
          "id": {
            "type": "string",
            "maxLength": 24,
            "minLength": 24,
            "pattern": "^[0-9a-f]{24}$",
            "title": "Id",
            "example": "5eb7cf5a86d9755df3a6c593"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "affiliation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Affiliation"
          },
          "avatarUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Avatarurl"
          },
          "bio": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bio"
          },
          "isActive": {
            "type": "boolean",
            "title": "Isactive"
          },
          "isSuperuser": {
            "type": "boolean",
            "title": "Issuperuser"
          },
          "publicFields": {
            "$ref": "#/components/schemas/PrivateUserProps"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "isActive",
          "isSuperuser",
          "publicFields"
        ],
        "title": "UserReadPublic"
      },
      "UserUpdate": {
        "properties": {
          "password": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Password"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "isActive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isactive"
          },
          "isSuperuser": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issuperuser"
          },
          "isVerified": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isverified"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 4,
                "pattern": "[a-zA-Z0-9\\-_]+"
              },
              {
                "type": "null"
              }
            ],
            "title": "Username",
            "description": "Public username of this user",
            "optionalNullable": false
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Full name of this user",
            "optionalNullable": false
          },
          "affiliation": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 180,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Affiliation",
            "description": "Affiliation info of this user",
            "optionalNullable": false
          },
          "locale": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LocaleKey"
              },
              {
                "type": "null"
              }
            ],
            "description": "Key of the locale used by this user",
            "optionalNullable": true
          },
          "avatarUrl": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1
              }
            ],
            "title": "Avatarurl",
            "description": "URL of this user's avatar picture",
            "optionalNullable": false
          },
          "bio": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string",
                "maxLength": 2000,
                "minLength": 1
              }
            ],
            "title": "Bio",
            "description": "Biography of this user",
            "optionalNullable": false
          },
          "publicFields": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PrivateUserProps"
              },
              {
                "type": "null"
              }
            ],
            "optionalNullable": false
          },
          "userNotificationTriggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserNotificationTrigger"
                },
                "type": "array",
                "maxItems": 4
              },
              {
                "type": "null"
              }
            ],
            "title": "Usernotificationtriggers",
            "description": "Events that trigger notifications for this user",
            "optionalNullable": false
          },
          "adminNotificationTriggers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AdminNotificationTrigger"
                },
                "type": "array",
                "maxItems": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Adminnotificationtriggers",
            "description": "Events that trigger admin notifications for this user",
            "optionalNullable": false
          },
          "seen": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seen",
            "optionalNullable": true
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "UsersSearchResult": {
        "properties": {
          "users": {
            "items": {
              "$ref": "#/components/schemas/UserRead"
            },
            "type": "array",
            "title": "Users",
            "description": "Paginated users data",
            "default": []
          },
          "total": {
            "type": "integer",
            "title": "Total",
            "description": "Total number of search hits",
            "default": 0
          }
        },
        "type": "object",
        "title": "UsersSearchResult"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "tekstuserauth"
      },
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "auth/jwt/login"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "texts",
      "description": "Texts configured on this platform",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "locations",
      "description": "Text locations (the structural units of a text)",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "resources",
      "description": "Resources related to certain texts",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "contents",
      "description": "Contents of resources",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "corrections",
      "description": "Correction notes from user to users",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "search",
      "description": "Search operations and search index maintenance",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "browse",
      "description": "Endpoints for effectively browsing the plaform data",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "platform",
      "description": "Platform-specific data, infos and operations",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "users",
      "description": "Registered users and their accounts",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "messages",
      "description": "Messages users send and receive on the platform",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "bookmarks",
      "description": "The current user's bookmarks",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "auth",
      "description": "Registration, authentication and security",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    },
    {
      "name": "status",
      "description": "The status of the API and its services",
      "externalDocs": {
        "description": "View full documentation",
        "url": "https://vedawebproject.github.io/Tekst"
      }
    }
  ]
}