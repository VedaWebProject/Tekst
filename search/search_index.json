{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"What is Tekst?","text":"<p>Warning</p> <p>\ud83c\udfd7 Just like Tekst itself, this manual/documentation is still very incomplete and \"work in progress\".</p> <p>Tekst is a collaborative, web-based research platform for aligning, displaying, linking, exploring, and enriching resources on natural language texts (and more). It is developed within the scope of the VedaWeb 2.0 research project on Old Indic texts, where it constitutes the technical basis of the VedaWeb research platform.</p> <p>Info</p> <p>At the moment, the VedaWeb platform is still a custom made application that was developed in an earlier phase of the VedaWeb project. Many of its concepts will find their way into Tekst, but it lacks core features like user management, collaboration and the possibility to work with multiple arbitrarily structured texts. As soon as Tekst is ready, the VedaWeb platform will become the first public instance of Tekst.</p>"},{"location":"#use-cases","title":"Use cases","text":""},{"location":"#philological-research-projects","title":"Philological research projects","text":"<p>The original intent for the development of Tekst was to create the technical basis for the online research platform VedaWeb, where numerous resources on multiple Old Indic Sanskrit texts can be browsed, compared and searched. These include text versions, translations, annotations and references to external sources, which are all aligned to the structure of their respective reference texts.</p> <p>Therefore, the main use case for Tekst are comparable research projects that either want to publish and showcase their research data, simply curate a set of established resources on certain reference texts, or even encourage the research community to participate and contribute to a central platform dedicated to provide relevant resources.</p>"},{"location":"#alternative-use-cases","title":"Alternative use cases","text":"<p>The above being said, nothing is stopping you from using Tekst in different contexts. Tekst might be a viable option for you as long as</p> <ol> <li>your data revolves around a somewhat structured work or other phenomenon (e.g. book, movie, theatre play or even a simple sequence of years)</li> <li>the types of resources Tekst offers are sufficiently able to represent the data you want to work with</li> </ol> <p>In the end, giving it a try on your local machine is relatively easy.</p> <p>Please note</p> <p>Despite the alternative use cases mentioned, \"texts\" are used exemplary throughout this documentation and in the internal user interface of Tekst, as this is still the main use case.</p>"},{"location":"#features","title":"Features","text":"<p>This list is far from exhaustive, but includes some features that might be decisive for certain use cases:</p> <ul> <li>Manage multiple independent, potentially differently structured texts and arbitrary related resources in a single platform instance</li> <li>One common user base for the whole platform</li> <li>UI colors will adapt to the currently selected working text for visual unambiguity</li> <li>Built-in i18n with an extensible set of languages</li> <li>Integrated user management with authentication and role-based as well as owner-based authorization</li> <li>Closed Mode to run the platform purely administrator-driven, turning off registration for arbitrary users</li> <li>Customization of<ul> <li>Content fonts</li> <li>On-screen keyboard character sets</li> </ul> </li> <li>Extensively typed and documented server API (via OpenAPI specification) and built-in interactive API documentation (via Swagger UI and/or ReDoc), all thanks to FastAPI</li> <li>...</li> </ul>"},{"location":"#caveats","title":"Caveats","text":"<p>Depending on your requirements, you might want to consider the following list of potential shortcomings:</p> <ul> <li>SEO: The (web-) client is a SPA that is rendered in the browser (so no SSR). As a result, visibility to search engines is somewhat limited.</li> <li>UI responsiveness: The user interface \u2013 especially the public-facing part \u2013 is responsive to the use on hand-held mobile devices. That being said, it was primarily developed for desktop-based usage. This might show in places.</li> </ul>"},{"location":"concepts/","title":"Concepts","text":""},{"location":"concepts/#texts-and-structure","title":"Texts and structure","text":"<p>One instance of Tekst can handle one or more reference texts that can be selected from the user interface. Switching to a different reference text changes the working context of Tekst, including available resources, settings, etc.</p> <p>Each text's structure has to be modeled in advance to lay the foundation for Tekst to work with it. The structure model of a text has to follow a clear hierarchical scheme of nested structure levels (e.g. \"Series\" contains \"Book\" contains \"Chapter\" contains \"Paragraph\" contains \"Sentence\").</p> <p>Each structure level must be subordinate to one parent structure level and can have at most one direct child level. It is not possible to have two structure levels modeled as siblings under the same parent level.</p> <p>Example</p> <p>A book's chapters may contain footnotes you'd want to model separately from the paragraphs contained in the chapters. This is not possible via the structure model. But you may very well just use a structure of \"Chapter\" containing \"Paragraph\" and associate resources containing resources on the footnotes to each location on the \"Paragraph\" level.</p> <p>The reason for this limitation is the concept of exploratory browsing implemented by Tekst. For being able to skip through the locations on a certain structure level like you turn the pages of a book, there has to be both a clear hierarchy of structure levels as well as a sequencial order of the locations on each level.</p> <p> Data model: Example of a simple song structure modeled for use as a reference work (or \"text\") in Tekst, with a selection of (partly imaginary) resources associated with each structure level. A resource may provide zero to one contents per location on its respective structure level.</p>"},{"location":"concepts/#resources","title":"Resources","text":"<p>Info</p> <p>The following selection of resource types is just a part of what is currently planned. More resource types may be added in the future.</p>"},{"location":"concepts/#plain-text","title":"Plain Text","text":"<p>This very simple resource type may be used for plain text (unformatted) data like a text version or translation on a \"Paragraph\" or \"Sentence\" level.</p>"},{"location":"concepts/#rich-text","title":"Rich Text","text":"<p>Similar to Plain Text but with added text formatting/styling capabilities, this resource type is useful for longer sequences of textual data that have their own internal structure, like a short analysis on a \"Paragraph\" structure level.</p>"},{"location":"concepts/#annotation","title":"Annotation","text":"<p>(WIP)</p>"},{"location":"concepts/#external-reference","title":"External Reference","text":"<p>(WIP)</p>"},{"location":"concepts/#image","title":"Image","text":"<p>(WIP)</p>"},{"location":"concepts/#audio","title":"Audio","text":"<p>(WIP)</p>"},{"location":"concepts/#collaboration","title":"Collaboration","text":"<p>Tekst aims to encourage collaboration between parties with common backgrounds or interests, like researchers working with data on the same reference text. The goal of this collaboration is the creation of a common, central platform for relevant data resources concerning one or multiple (related) texts. With Tekst, research communities are able to:</p> <ul> <li>accumulate relevant resources on one online platform</li> <li>create and propose new resources for publication</li> <li>evaluate, compare and improve data created by other community members</li> <li>publish curated datasets to the broader public (which is a decision of the party operating the platform)</li> <li>offer different ways for accessing the data, like browsing contents along the texts structure, extensive search functionalities or exporting datasets in various formats</li> <li>maintain a close network of likeminded researchers</li> </ul> <p> Collaboration flow between administrators, registered users and visitors of the platform.</p> <p>The administrator(s) operating the platform curate the resources that are visible to public visitors. A selected community of registered users is able to create and share datasets with each other, propose corrections or additions, stay up to date on each other's progress and maintain a cooperative relationship to other representatives of their field.</p>"},{"location":"administration/backups/","title":"Backups","text":"<p>The following examples leverage the MongoDB utilities <code>mongodump</code> and <code>mongorestore</code> for creating and restoring a database backup file, respectively.</p> <p>Variables used in example commands</p> <ul> <li><code>$container</code>: The name of the MongoDB Docker container</li> <li><code>$uri</code>: The MongoDB connection string URI (from inside the container if you're using Docker) \u2013 Example: <code>mongodb://mongoDbUser:mongoDbPassword@127.0.0.1:27017/?authSource=admin</code></li> <li><code>$file</code>: The file to read/write the backup from/to</li> <li><code>$db</code>: The name of the database you used in your configuration</li> </ul> <p>Important</p> <p>You might have to use elevated privileges (e.g. via <code>sudo</code>) for executing the commands listed below!</p>"},{"location":"administration/backups/#backing-up-the-database","title":"Backing up the database","text":"<p>Tip</p> <p>If you want to include the current date into the name of your backup file, just use <code>$(date -I)</code> as part of <code>$file</code>, e.g. <code>... &gt; \"my_important_backup_from_$(date -I).backup\"</code>!</p> <p>If MongoDB runs in a container:</p> <pre><code>docker exec -i $container /usr/bin/mongodump --uri $uri --db=$db --gzip --archive &gt; $file\n</code></pre> <p>If MongoDB runs bare-metal:</p> <pre><code>/usr/bin/mongodump --uri $uri --db=$db --gzip --archive &gt; $file\n</code></pre>"},{"location":"administration/backups/#restoring-the-database","title":"Restoring the database","text":"<p>Important</p> <p>In case your backup was created while using an older version of Tekst than the one you are using currently, you might have to run database migrations to make the \"old\" data from the backup compatible with the current version of Tekst. Please refer to Upgrades to learn how to do that!</p> <p>If MongoDB runs in a container:</p> <pre><code># define in-container filename for backup file\ncontainer_file=\"/tmp/tekst-db.backup\"\n\n# copy file to container\ndocker cp $file $container:$container_file\n\n# restore backup\ndocker exec -i $container /usr/bin/mongorestore --uri $uri --drop --gzip --archive=$container_file\n\n# delete backup file from container\ndocker exec -i $container rm -f $container_file\n</code></pre> <p>If MongoDB runs bare-metal:</p> <pre><code>/usr/bin/mongorestore --uri $uri --drop --gzip --archive=$file\n</code></pre>"},{"location":"administration/cli/","title":"CLI","text":"<p>The Tekst-API offers a simple CLI, e.g. for bootstrapping the API before startup, triggering certain maintenance routines or migrating the database after an upgrade of Tekst.</p> <p>Important</p> <p>If the Tekst-API is running in a container, the commands below have to be prefixed with...</p> <pre><code>docker exec -i $container\n</code></pre> <p>...where <code>$container</code> is the name of the container!</p> <p>To get an overview of the available commands and their arguments, you can also run <code>python -m tekst --help</code>.</p>"},{"location":"administration/cli/#bootstrap","title":"<code>bootstrap</code>","text":"<p>This command has to be run each time before starting up the Tekst-API. It makes sure the data in the database is compatible with the Tekst version used (and runs automatic migrations if needed and configured), inserts demo data into the database if it is empty (on first start), creates the initial admin user (if no users exist yet), generates precomputed data (cache) and updates the search indices (if necessary).</p> <p>All this can only be done by a single process and should not happen concurrently. This is why it has to happen before the API startup, which is usually powered by multiple workers acting asynchronously.</p> <pre><code>python -m tekst bootstrap\n</code></pre>"},{"location":"administration/cli/#index","title":"<code>index</code>","text":"<p>(Re)creates/updates all search indices if they are out of date.</p> <pre><code>python -m tekst index\n</code></pre> <p>Tip</p> <p>The <code>index</code> command is included in the things the <code>maintenance</code> command does (see below!).</p>"},{"location":"administration/cli/#precompute","title":"<code>precompute</code>","text":"<p>Tekst uses a precomputed cache holding data that is expensive to generate but essential for the application to work. This command triggers the update/creation of the precomputed cache.</p> <pre><code>python -m tekst precompute # use -f/--force to enforce even if up-to-date\n</code></pre> <p>Tip</p> <p>The <code>precompute</code> command is included in the things the <code>maintenance</code> command does (see below!). Regeneration of the precomputed cache is not enforced when run as part of the <code>maintenance</code> routine.</p>"},{"location":"administration/cli/#cleanup","title":"<code>cleanup</code>","text":"<p>Triggers the internal cleanup routine of the Tekst-API. It deletes stale user messages and outdated access tokens.</p> <pre><code>python -m tekst cleanup\n</code></pre> <p>Tip</p> <p>The <code>cleanup</code> command is included in the things the <code>maintenance</code> command does (see below!).</p>"},{"location":"administration/cli/#maintenance","title":"<code>maintenance</code>","text":"<p>A single command that runs <code>index</code>, <code>precompute</code> and <code>cleanup</code> sequentially. Very handy to be scheduled as a recurring (e.g. nightly) job.</p> <pre><code>python -m tekst maintenance\n</code></pre>"},{"location":"administration/cli/#migrate","title":"<code>migrate</code>","text":"<p>Checks the data in the database for compatibility with the currently used version of Tekst and runs database migrations if necessary. This has to be used after an upgrade of Tekst if <code>TEKST_AUTO_MIGRATE=false</code>.</p> <pre><code>python -m tekst migrate\n\n# Or use the --yes flag to suppress asking for confirmation:\n# python -m tekst migrate --yes\n</code></pre>"},{"location":"administration/cli/#schema","title":"<code>schema</code>","text":"<p>Generates a JSON file with the OpenAPI schema of the Tekst-API.</p> <pre><code>python -m tekst schema\n</code></pre> <p>This command takes several arguments for customizing its behavior:</p> <pre><code>Usage: python -m tekst schema [OPTIONS]\n\n  Exports Tekst's OpenAPI schema to a JSON file\n\n  Important: The active Tekst environment variables might influence the\n  schema!\n\nOptions:\n  -f, --to-file           Output to file defined by --output-file instead of\n                          stdout\n  -o, --output-file TEXT  Output file path to write to if --to-file flag is\n                          set  [default: openapi.json]\n  -i, --indent INTEGER    Indent output by n whitespace characters (0 for no\n                          indentation)  [default: 2]\n  -s, --sort-keys         Sort keys in output JSON\n  -q, --quiet             Don't output anything (only effective if --to-file\n                          flag is not set)\n  --help                  Show this message and exit.\n</code></pre>"},{"location":"administration/cli/#export","title":"<code>export</code>","text":"<p>Bulk-exports one or more (or all) resources' data in on or more (or all) available export formats.</p> <pre><code>python -m tekst export\n</code></pre> <p>This command takes several arguments for customizing its behavior:</p> <pre><code>Usage: python -m tekst export [OPTIONS]\n\n  Exports the contents of the given resources (or all) using the given formats\n  (or all) to the given output directory\n\nOptions:\n  -r, --resource TEXT  ID(s) of resource(s) to export, all if not set\n  -f, --format TEXT    Format(s) to export, all if not set  [default: json,\n                       tekst-json, csv]\n  -o, --output TEXT    Output directory to write to  [default:\n                       /tmp/tekst_resource_export/]\n  -q, --quiet          Don't output anything (except errors and warnings)\n  -d, --delete         Delete all existing files in the output directory\n  --help               Show this message and exit.\n</code></pre>"},{"location":"administration/maintenance/","title":"Maintenance","text":""},{"location":"administration/maintenance/#search-indices-updates","title":"Search indices updates","text":"<p>Updating (or recreating) the search indices is possible via</p> <ul> <li>the administration interface of the Tekst web client (Administration &gt; Maintenance &gt; Search Indices)</li> <li>the Tekst-API CLI (especially needed for scheduling this as a recurring maintenance task)</li> </ul>"},{"location":"administration/maintenance/#precomputed-data","title":"Precomputed data","text":"<p>Creating the precomputed data (resource coverage data, resource data aggregations, ...) needed for parts of Tekst to work is possible via</p> <ul> <li>the administration interface of the Tekst web client (Administration &gt; Maintenance &gt; Precomputed Data)</li> <li>the Tekst-API CLI (as part of the <code>maintenance</code> command \u2013 especially needed for scheduling this as a recurring maintenance task)</li> </ul>"},{"location":"administration/maintenance/#internal-cleanup","title":"Internal cleanup","text":"<p>Triggering the internal cleanup routine (for deleting stale user messages, ...) is possible via</p> <ul> <li>the administration interface of the Tekst web client (Administration &gt; Maintenance &gt; Internal Cleanup)</li> <li>the Tekst-API CLI (as part of the <code>maintenance</code> command \u2013 especially needed for scheduling this as a recurring maintenance task)</li> </ul>"},{"location":"administration/upgrades/","title":"Upgrades","text":"<p>Work in progress</p> <p>This page is yet to exist.</p>"},{"location":"administration/upgrades/#installing-new-versions","title":"Installing new versions","text":"<p>...</p>"},{"location":"administration/upgrades/#migrating-the-database","title":"Migrating the database","text":"<p>...</p>"},{"location":"setup/configuration/","title":"Configuration","text":"<p>The following table lists all the configuration values that can be set as environment variables (e.g. via a <code>.env</code> file).</p> <p>Important</p> <ul> <li>Any changes to the configuration values listed below require an application restart to take effect.</li> <li>Some variable names contain double underscores (<code>__</code>) to reflect the nested internal configuration \u2013 be careful not to miss those in case you're into typing things by hand!</li> </ul>"},{"location":"setup/configuration/#core-config","title":"Core Config","text":"<p>Basic configuration, URL, paths, ...</p>"},{"location":"setup/configuration/#tekst_server_url","title":"<code>TEKST_SERVER_URL</code>","text":"<p>Full public URL of the server running the application (without sub path, port only if other than 80/443) (String \u2013 default: <code>http://127.0.0.1:8000</code>)</p>"},{"location":"setup/configuration/#tekst_api_path","title":"<code>TEKST_API_PATH</code>","text":"<p>Public sub path of the API. This must be set independently from <code>TEKST_WEB_PATH</code>, so if <code>TEKST_WEB_PATH</code> is <code>/foo</code>, <code>TEKST_API_PATH</code> must include the web path, like <code>/foo/api</code>. (String \u2013 default: <code>/api</code>)</p> <p>Important</p> <p>The official docker image assumes an API path ending with <code>/api</code>, so either do not set <code>TEKST_API_PATH</code> at all (if you deploy Tekst under <code>/</code>) to let it default to <code>/api</code>, or set an API path that is a combination of <code>TEKST_WEB_PATH</code> and the path suffix <code>/api</code>, e.g. <code>/foo/api</code>!</p>"},{"location":"setup/configuration/#tekst_web_path","title":"<code>TEKST_WEB_PATH</code>","text":"<p>Public path of the web client (String \u2013 default: <code>/</code>)</p>"},{"location":"setup/configuration/#tekst_behind_reverse_proxy","title":"<code>TEKST_BEHIND_REVERSE_PROXY</code>","text":"<p>If the API runs behind a reverse proxy (e.g. if using the the project's <code>compose.yml</code>), set this to <code>true</code> and make sure the reverse proxy is properly setting (or appending to) the <code>X-Forwarded-For</code> header on the passed requests. This is to make sure the API is able to try to prevent accidentally flooding the workers with long-running background jobs. (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_web_static_dir","title":"<code>TEKST_WEB_STATIC_DIR</code>","text":"<p>Local path to static web files directory (String \u2013 default: <code>/var/www/tekst/static/</code>)</p>"},{"location":"setup/configuration/#tekst_dev_mode","title":"<code>TEKST_DEV_MODE</code>","text":"<p>Development mode \u2013 only use for development! (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_log_level","title":"<code>TEKST_LOG_LEVEL</code>","text":"<p>API log level (<code>DEBUG</code> | <code>INFO</code> | <code>WARNING</code> | <code>ERROR</code> | <code>CRITICAL</code> \u2013 default: <code>WARNING</code>)</p>"},{"location":"setup/configuration/#tekst_auto_migrate","title":"<code>TEKST_AUTO_MIGRATE</code>","text":"<p>If <code>false</code> (default) and there are pending DB migrations that should be run, the bootstrap routine will fail with a critical log message (as the API itself will always do). If <code>true</code>, pending migrations will be run as part of the bootstrap routine. (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_xsrf","title":"<code>TEKST_XSRF</code>","text":"<p>Enables/disables XSRF protection enforced by the API. (Boolean \u2013 default: <code>true</code>)</p>"},{"location":"setup/configuration/#tekst_temp_files_dir","title":"<code>TEKST_TEMP_FILES_DIR</code>","text":"<p>Absolute path to local temporary directory to use (String \u2013 default: <code>/tmp/tekst_tmp</code>)</p>"},{"location":"setup/configuration/#database-mongodb","title":"Database (MongoDB)","text":"<p>Configuration for the MongoDB connection</p>"},{"location":"setup/configuration/#tekst_db__protocol","title":"<code>TEKST_DB__PROTOCOL</code>","text":"<p>MongoDB protocol (String \u2013 default: <code>mongodb</code>)</p>"},{"location":"setup/configuration/#tekst_db__host","title":"<code>TEKST_DB__HOST</code>","text":"<p>MongoDB host (String \u2013 default: <code>127.0.0.1</code>)</p>"},{"location":"setup/configuration/#tekst_db__port","title":"<code>TEKST_DB__PORT</code>","text":"<p>MongoDB port (Integer \u2013 default: <code>27017</code>)</p>"},{"location":"setup/configuration/#tekst_db__user","title":"<code>TEKST_DB__USER</code>","text":"<p>MongoDB user (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_db__password","title":"<code>TEKST_DB__PASSWORD</code>","text":"<p>MongoDB password (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_db__name","title":"<code>TEKST_DB__NAME</code>","text":"<p>MongoDB database name (String \u2013 default: <code>tekst</code>)</p>"},{"location":"setup/configuration/#tekst_db__unicode_nf","title":"<code>TEKST_DB__UNICODE_NF</code>","text":"<p>Apply Unicode string normalization when writing to the database (<code>NFC</code>, <code>NFKC</code>, <code>NFD</code>, <code>NFKD</code> or none \u2013 default: <code>NFC</code>)</p>"},{"location":"setup/configuration/#search-server-elasticsearch","title":"Search Server (Elasticsearch)","text":"<p>Configuration for the connection to the Elasticsearch server</p>"},{"location":"setup/configuration/#tekst_es__protocol","title":"<code>TEKST_ES__PROTOCOL</code>","text":"<p>Elasticsearch protocol (String \u2013 default: <code>http</code>)</p>"},{"location":"setup/configuration/#tekst_es__host","title":"<code>TEKST_ES__HOST</code>","text":"<p>Elasticsearch host (String \u2013 default: <code>127.0.0.1</code>)</p>"},{"location":"setup/configuration/#tekst_es__port","title":"<code>TEKST_ES__PORT</code>","text":"<p>Elasticsearch port (Integer \u2013 default: <code>9200</code>)</p>"},{"location":"setup/configuration/#tekst_es__prefix","title":"<code>TEKST_ES__PREFIX</code>","text":"<p>Elasticsearch prefix (for index, templates, etc.) (String \u2013 default: <code>tekst</code>)</p>"},{"location":"setup/configuration/#tekst_es__timeout_init_s","title":"<code>TEKST_ES__TIMEOUT_INIT_S</code>","text":"<p>Timeout for waiting for Elasticsearch service to be available on startup, in seconds (Integer \u2013 default: <code>240</code>)</p>"},{"location":"setup/configuration/#tekst_es__timeout_general_s","title":"<code>TEKST_ES__TIMEOUT_GENERAL_S</code>","text":"<p>General client timeout for requests to Elasticsearch, in seconds (Integer \u2013 default: <code>30</code>)</p>"},{"location":"setup/configuration/#tekst_es__timeout_search_s","title":"<code>TEKST_ES__TIMEOUT_SEARCH_S</code>","text":"<p>Timeout for search reqests to Elasticsearch, in seconds (Integer \u2013 default: <code>30</code>)</p>"},{"location":"setup/configuration/#security","title":"Security","text":"<p>All the configuration related to app-level security</p>"},{"location":"setup/configuration/#tekst_security__secret","title":"<code>TEKST_SECURITY__SECRET</code>","text":"<p>Secret to use for token generation (String \u2013 default: <code>must_change_this</code>)</p>"},{"location":"setup/configuration/#tekst_security__closed_mode","title":"<code>TEKST_SECURITY__CLOSED_MODE</code>","text":"<p>Disallow public user signups/applications (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_security__users_active_by_default","title":"<code>TEKST_SECURITY__USERS_ACTIVE_BY_DEFAULT</code>","text":"<p>Whether new user accounts are active by default (otherwise have to be activated by admins) (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_security__enable_cookie_auth","title":"<code>TEKST_SECURITY__ENABLE_COOKIE_AUTH</code>","text":"<p>Enable cookie-based authentication (needed for the web client to work!) (Boolean \u2013 default: <code>true</code>)</p>"},{"location":"setup/configuration/#tekst_security__auth_cookie_name","title":"<code>TEKST_SECURITY__AUTH_COOKIE_NAME</code>","text":"<p>Cookie name (String \u2013 default: <code>tekstuserauth</code>)</p>"},{"location":"setup/configuration/#tekst_security__auth_cookie_domain","title":"<code>TEKST_SECURITY__AUTH_COOKIE_DOMAIN</code>","text":"<p>Cookie domain (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_security__auth_cookie_lifetime","title":"<code>TEKST_SECURITY__AUTH_COOKIE_LIFETIME</code>","text":"<p>Cookie lifetime in seconds \u2013 <code>0</code> produces session cookies (Integer \u2013 default: <code>43200</code>)</p>"},{"location":"setup/configuration/#tekst_security__access_token_lifetime","title":"<code>TEKST_SECURITY__ACCESS_TOKEN_LIFETIME</code>","text":"<p>Lifetime of access tokens in seconds; limits validity of cookies and must thus be greater than or equal to <code>TEKST_SECURITY__AUTH_COOKIE_LIFETIME</code> (Integer \u2013 default: <code>43200</code>, min.: <code>3600</code>)</p>"},{"location":"setup/configuration/#tekst_security__enable_jwt_auth","title":"<code>TEKST_SECURITY__ENABLE_JWT_AUTH</code>","text":"<p>Enable JWT-based authentication (optional, useful for programmatic access to the API) (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_security__auth_jwt_lifetime","title":"<code>TEKST_SECURITY__AUTH_JWT_LIFETIME</code>","text":"<p>Lifetime of JWT used for authentication (Integer \u2013 default: <code>86400</code>)</p>"},{"location":"setup/configuration/#tekst_security__reset_pw_token_lifetime","title":"<code>TEKST_SECURITY__RESET_PW_TOKEN_LIFETIME</code>","text":"<p>Lifetime of password reset tokens (Integer \u2013 default: <code>3600</code>)</p>"},{"location":"setup/configuration/#tekst_security__verification_token_lifetime","title":"<code>TEKST_SECURITY__VERIFICATION_TOKEN_LIFETIME</code>","text":"<p>Lifetime of account verification tokens (Integer \u2013 default: <code>86400</code>)</p>"},{"location":"setup/configuration/#tekst_security__init_admin_email","title":"<code>TEKST_SECURITY__INIT_ADMIN_EMAIL</code>","text":"<p>Email address of initial admin account (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_security__init_admin_password","title":"<code>TEKST_SECURITY__INIT_ADMIN_PASSWORD</code>","text":"<p>Password of initial admin account (String \u2013 default: none)</p>"},{"location":"setup/configuration/#email","title":"Email","text":"<p>Configuration for the SMTP connection and sender address of outgoing emails</p>"},{"location":"setup/configuration/#tekst_email__smtp_server","title":"<code>TEKST_EMAIL__SMTP_SERVER</code>","text":"<p>SMTP server address (String \u2013 default: <code>127.0.0.1</code>)</p>"},{"location":"setup/configuration/#tekst_email__smtp_port","title":"<code>TEKST_EMAIL__SMTP_PORT</code>","text":"<p>SMTP server port (Integer \u2013 default: <code>25</code>)</p>"},{"location":"setup/configuration/#tekst_email__smtp_user","title":"<code>TEKST_EMAIL__SMTP_USER</code>","text":"<p>SMTP user (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_email__smtp_password","title":"<code>TEKST_EMAIL__SMTP_PASSWORD</code>","text":"<p>SMTP password (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_email__smtp_starttls","title":"<code>TEKST_EMAIL__SMTP_STARTTLS</code>","text":"<p>Whether to use StartTLS for SMTP connection (Boolean \u2013 default: <code>true</code>)</p>"},{"location":"setup/configuration/#tekst_email__from_address","title":"<code>TEKST_EMAIL__FROM_ADDRESS</code>","text":"<p>From-address used for outgoing emails (String \u2013 default: <code>noreply@example-tekst-instance.org</code>)</p>"},{"location":"setup/configuration/#documentation","title":"Documentation","text":"<p>Configuration for the OpenAPI schema URL and API documentation via SwaggerUI and/or Redoc</p>"},{"location":"setup/configuration/#tekst_api__openapi_url","title":"<code>TEKST_API__OPENAPI_URL</code>","text":"<p>URL sub path (under <code>TEKST_API_PATH</code>) to public <code>openapi.json</code> API schema (if not set, disables SwaggerUI and Redoc) (String \u2013 default: <code>/openapi.json</code>)</p>"},{"location":"setup/configuration/#tekst_api__swaggerui_url","title":"<code>TEKST_API__SWAGGERUI_URL</code>","text":"<p>URL sub path (under <code>TEKST_API_PATH</code>) to SwaggerUI interactive API docs; empty value disables SwaggerUI (String \u2013 default: <code>/docs</code>)</p>"},{"location":"setup/configuration/#tekst_api__redoc_url","title":"<code>TEKST_API__REDOC_URL</code>","text":"<p>URL sub path (under <code>TEKST_API_PATH</code>) to Redoc API docs; empty value disables Redoc (String \u2013 default: <code>/redoc</code>)</p>"},{"location":"setup/configuration/#tekst_api__title","title":"<code>TEKST_API__TITLE</code>","text":"<p>Platform API title (String \u2013 default: <code>Tekst</code>)</p>"},{"location":"setup/configuration/#tekst_api__summary","title":"<code>TEKST_API__SUMMARY</code>","text":"<p>Platform API summary (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__description","title":"<code>TEKST_API__DESCRIPTION</code>","text":"<p>Platform API description (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__terms_url","title":"<code>TEKST_API__TERMS_URL</code>","text":"<p>URL to API usage terms (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__contact_name","title":"<code>TEKST_API__CONTACT_NAME</code>","text":"<p>API contact name (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__contact_email","title":"<code>TEKST_API__CONTACT_EMAIL</code>","text":"<p>API contact email (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__contact_url","title":"<code>TEKST_API__CONTACT_URL</code>","text":"<p>API contact URL (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__license_name","title":"<code>TEKST_API__LICENSE_NAME</code>","text":"<p>API license name; if not set, no license info will be integrated in API docs (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__license_id","title":"<code>TEKST_API__LICENSE_ID</code>","text":"<p>API license ID (canonical short form of name) (String \u2013 default: none)</p>"},{"location":"setup/configuration/#tekst_api__license_url","title":"<code>TEKST_API__LICENSE_URL</code>","text":"<p>API license URL (String \u2013 default: none)</p>"},{"location":"setup/configuration/#cross-origin-resource-sharing-cors","title":"Cross-Origin Resource Sharing (CORS)","text":"<p>You should handle CORS via your webserver configuration. But if for some reason you nead app-level CORS management, this is where to look.</p>"},{"location":"setup/configuration/#tekst_cors__enable","title":"<code>TEKST_CORS__ENABLE</code>","text":"<p>Enable CORS header control; only enable this if you don't have a web server / reverse proxy that already handles it! (Boolean \u2013 default: <code>false</code>)</p>"},{"location":"setup/configuration/#tekst_cors__allow_origins","title":"<code>TEKST_CORS__ALLOW_ORIGINS</code>","text":"<p>CORS allow origins (Comma-separated list as string \u2013 default: <code>*</code>)</p>"},{"location":"setup/configuration/#tekst_cors__allow_credentials","title":"<code>TEKST_CORS__ALLOW_CREDENTIALS</code>","text":"<p>CORS allow credentials (Boolean \u2013 default: <code>true</code>)</p>"},{"location":"setup/configuration/#tekst_cors__allow_methods","title":"<code>TEKST_CORS__ALLOW_METHODS</code>","text":"<p>CORS allow methods (Comma-separated list as string \u2013 default: <code>*</code>)</p>"},{"location":"setup/configuration/#tekst_cors__allow_headers","title":"<code>TEKST_CORS__ALLOW_HEADERS</code>","text":"<p>CORS allow headers (Comma-separated list as string \u2013 default: <code>*</code>)</p>"},{"location":"setup/configuration/#what-is-left","title":"What is left","text":"<p>All these configuration values \u2013 and then some...</p>"},{"location":"setup/configuration/#tekst_misc__usrmsg_force_delete_after_days","title":"<code>TEKST_MISC__USRMSG_FORCE_DELETE_AFTER_DAYS</code>","text":"<p>Delete old user messages after n days (Integer \u2013 default: <code>365</code>)</p>"},{"location":"setup/configuration/#tekst_misc__max_resources_per_user","title":"<code>TEKST_MISC__MAX_RESOURCES_PER_USER</code>","text":"<p>Maximum number of resources/versions that one user is allowed to own (Integer \u2013 default: <code>10</code>)</p>"},{"location":"setup/configuration/#tekst_misc__del_exports_after_minutes","title":"<code>TEKST_MISC__DEL_EXPORTS_AFTER_MINUTES</code>","text":"<p>Time in minutes after whichfinished/failed tasks that produce a downloadable file artifact (namely \"exports\") will be deleted automatically, including the respective file (Integer \u2013 default: <code>5</code>)</p>"},{"location":"setup/customization/","title":"Customization","text":""},{"location":"setup/customization/#additional-custom-fonts","title":"Additional custom fonts","text":"<p>Info</p> <p>You have to set up custom client assets as a preliminary step if you haven't done so already!</p> <p>You can provide yourself and other users with the option to use alternative fonts for specific resources or on-screen keyboard modes. This can be useful when the content of a resource or an OSK mode uses a specific character set or diacritics that cannot be displayed by the default font Tekst uses for contents.</p> <p>To add additional fonts, you need access to the server on which the platform application is deployed!</p> <ol> <li>Create a file <code>fonts.css</code> inside the directory you configured for custom client assets.</li> <li>Create a folder <code>fonts</code> in the same directory. Here you can store your additional fonts (possibly sorted into further subfolders). It is recommended to prepare each font in different formats optimized for web use (see here!).</li> <li>In the previously created <code>fonts.css</code>, create a complete <code>@font-face</code> definition for each of your fonts (again, see here for details). As the public path to the files, specify <code>/static/fonts/&lt;...&gt;</code>, replacing <code>&lt;...&gt;</code> with the path within your previously created <code>fonts</code> folder.</li> <li>The value used for <code>font-family</code> in the <code>@font-face</code> definition can now be entered as an additional font in the platform's system settings. Pay attention to exact identical spelling!</li> <li>The added fonts can now be selected as a different font in the settings for each text-based resource or in OSK modes.</li> </ol> <p>Tip</p> <p>Pay attention to the licensing of the fonts you use and, where applicable, include the corresponding license files with the font files.</p> <p>A note for advanced users</p> <p>If you want to change the overall UI font or default resource font the client application uses, you might add your fonts following the steps above and then change the internal <code>@font-face</code> definitions in <code>Tekst-Web/public/fonts.css</code> (don't change the <code>font-family</code> names!). Use the public paths described above. Please note that for this change to take effect, you'll have to re-build the client application!</p>"},{"location":"setup/customization/#on-screen-keyboard","title":"On-screen keyboard","text":"<p>Info</p> <p>You have to set up custom client assets as a preliminary step if you haven't done so already!</p> <p>Tekst has an on-screen keyboard feature for easy input of special character sets in places where this might come in handy. Take the following steps to set up you custom on-screen keyboard character sets:</p> <ol> <li>Create a folder <code>osk</code> inside the directory you configured for custom client assets.</li> <li>For each OSK character set you want to provide, create a (valid!) <code>.json</code> file inside this <code>osk</code> folder following the format shown in the example below. For the name of your <code>.json</code> file, avoid using whitespaces or special characters. Keep it simple.</li> <li>You can now set up available OSK modes (combinations of character maps and fonts used in the UI) in the administration settings of the client. Please use the exact name of the <code>.json</code> files you created (but without the <code>.json</code> extension!) as the <code>key</code> and a speaking <code>name</code> for each OSK mode.</li> </ol> <p>Example</p> <p>Follow this format for your character sets' <code>.json</code> files. The outer array holds the lines of character groups that will be rendered in a common line on the on-screen keyboard (if possible). The inner arrays contain the groups of actual definitions of the keyboard's keys that will be rendered as groups of keys (somewhat closer to each other). For each character object, the <code>char</code> property is required. You can provide an optional <code>shift</code> property if you want the key on the keyboard to print an alternate character if the OSK's Shift key is toggled. Otherwise, <code>char</code> is used as a fallback.</p> <pre><code>[\n    [\n        [\n            { \"char\": \"a\", \"shift\": \"A\" },\n            { \"char\": \"b\", \"shift\": \"B\" }\n        ],\n        [\n            { \"char\": \"c\", \"shift\": \"C\" },\n            { \"char\": \"d\", \"shift\": \"D\" }\n        ]\n    ],\n    [\n        [\n            { \"char\": \"e\", \"shift\": \"E\" },\n            { \"char\": \"f\", \"shift\": \"F\" }\n        ]\n    ]\n]\n</code></pre>"},{"location":"setup/customization/#custom-client-assets","title":"Custom client assets","text":"<p>For some customization features of Tekst, it is necessary to provide custom assets to the client application. So if you want to e.g. use additional fonts or the on-screen keyboard feature with custom key maps, this is a preparation step you'll have to take.</p> <p>To provide custom assets, you need administrative access to the server on which the platform application is deployed. The procedure is described step by step below.</p> <p>Warning</p> <p>It is always recommended to create a backup of all application data before making any changes to the application deployment!</p> <p>For a Docker-based deployment...</p> <ol> <li>In case you haven't done so already, in the <code>.env</code> file, set the value for <code>TEKST_WEB_STATIC_DIR</code> to a path under which you want to make additional static files available for the web client (e.g., <code>/var/www/tekst/static/</code>) and create the corresponding directories.</li> <li>For the client container to recognize the changed value in <code>.env</code>, it needs to be restarted (<code>docker compose restart client</code>).</li> </ol> <p>For a bare-metal deployment...</p> <ol> <li>In case you haven't done so already, create a directory where you want to make additional static files available for the web client (e.g., <code>/var/www/tekst/static/</code>).</li> <li>Ensure that your web server makes this directory available as <code>/static</code> under the same path as the application, e.g <code>www.tekst-platform.org/static</code>. How this is done depends on the web server you are using.</li> </ol>"},{"location":"setup/installation/","title":"Installation","text":""},{"location":"setup/installation/#general-requirements","title":"General requirements","text":"<p>The follwing requirements apply to either deployment strategy. Each deployment strategy then comes with its own respective additional requirements.</p> <ul> <li>A server to deploy Tekst to (the deployment instructions below assume a Linux-based server with Docker and Docker Compose installed, as this is the recommended setup strategy)</li> <li>A webserver configured to handle traffic between the outside world and Tekst via HTTPS (!)</li> <li>Access to a working, reliable SMTP server to send out emails containing verification links, password reset links, etc. It is important that this SMTP server is well-configured so the emails it sends actually reach their recepients. Whether you use a third-party SMTP server (like the one of your email provider) or your own self-hosted one is up to you. If you plan to run Tekst in closed mode (only one or more administrators, no public users who can create content), this requirement is not strictly necessary.</li> </ul>"},{"location":"setup/installation/#docker-based-deployment-recommended","title":"Docker-based deployment (recommended)","text":"<p>As with every Docker-based deployment, the benefits of this approach are a reproducable deployment environment and an overall isolated setup. Also, a Docker-based deployment will save you from jumping through all the hoops of a bare-metal deployment of all the needed services and environments.</p> <p>The instructions below will help you deploy a stack consisting of everything Tekst needs to run (one container for each part of the stack):</p> <ul> <li>A webserver (Caddy) serving the static client application (Tekst-Web) and routing API-requests to the server (Tekst-API)</li> <li>The Tekst server application (Tekst-API)</li> <li>MongoDB</li> <li>Elasticsearch</li> </ul> <p>Requirements</p> <p>As the prepared Docker-based setup handles the isolated installation of the services listed above, all you'll need is the following:</p> <ul> <li>Git</li> <li>Docker</li> <li>Docker Compose (If you're on Linux, the Docker Compose Plugin for Docker is recommended. Otherwise there's Compose standalone, for which the commands below have to be run as <code>docker-compose ...</code> instead of <code>docker compose ...</code>)</li> <li><code>crontab</code> or something similar for scheduling recurring background jobs</li> </ul> <p>Info</p> <p>All example commands on this page assume you're using a shell on a Unix-like operating system with Docker and Docker Compose installed.</p> <ol> <li> <p>Clone this repository and change into the resulting directory:</p> <pre><code>git clone https://github.com/VedaWebProject/Tekst.git &amp;&amp; cd Tekst\n</code></pre> </li> <li> <p>Configure Tekst's deployment:</p> <p>Copy the <code>.env.docker</code> template file and name the copy <code>.env</code>. The template has some values preset for working with a deployment based on the project's <code>compose.yml</code>. See the Configuration page for guidance. The configuration defaults to sensible values wherever possible. There are things you have to configure for Tekst to work, though.</p> <pre><code>cp .env.docker .env\n</code></pre> </li> <li> <p>Secure sensitive configuration values:</p> <p>Your <code>.env</code> file will contain some sensitive data, like the secret used for token generation or DB credentials. To better secure these values, let <code>root</code> own the <code>.env</code> file:</p> <pre><code>sudo chown root:root .env\n</code></pre> <p>... and restrict all read/write acces to the owner/group of the file:</p> <pre><code>sudo chmod ug=rw,o= .env\n</code></pre> <p>(or <code>sudo chmod 660 .env</code> if you're into numbers)</p> <p>Very important!</p> <p>After you finish deploying Tekst by following these instructions, please log into the initial admin account and change its password immediately.</p> </li> <li> <p>Build the Tekst images:</p> <p>Build the docker images for the Tekst-API (server) and Tekst-Web (client) applications.</p> <pre><code>docker compose build api web\n</code></pre> <p>... now grab a (small) coffee \u2615</p> <p>Note</p> <p>Whenever you decide to change one of <code>TEKST_SERVER_URL</code>, <code>TEKST_API_PATH</code> or <code>TEKST_WEB_PATH</code> in your <code>.env</code> file, you'll have to build the image for Tekst-Web (client) again (using <code>docker compose build web --no-cache</code>), as these values are statically replaced in the client's code during the build process!</p> </li> <li> <p>Run Tekst \ud83d\ude80</p> <p>Run the complete application stack via</p> <pre><code>docker compose up -d\n</code></pre> <p>The container interfacing the host system and the application stack is now available locally at <code>127.0.0.1:8087</code>. If you wanted to change this port, you'd have to do so in the <code>compose.yml</code>.</p> <p>Note</p> <p>The above command will detach the process of running the stack from your terminal and run it in the background (which is usually what you'd want in production). This is what the <code>-d</code> flag does. For checking the log output of the running stack, call <code>docker compose logs</code> from the same directory (the one containing the <code>compose.yml</code>). If you only want to see the log output of one of the services, just append the service's name from the <code>compose.yml</code> to the command, e.g. <code>docker compose logs api</code>.</p> <p>Read the Docker Compose documentation to learn how to stop, start, reset (...) the application stack using Docker Compose.</p> </li> <li> <p>Setup scheduled jobs</p> <p>Tekst needs to run some recurring background jobs to function propertly. Please read about this below!</p> </li> </ol>"},{"location":"setup/installation/#bare-metal-deployment","title":"Bare-metal deployment","text":"<p>Please be aware that taking this approach is considerably more difficult and requires much more manual maintenance than deploying via Docker. The expertise needed to install and configure all these services will surely also suffice for extrapolating from the Docker-based setup a bit. For a big part, the process depends on the environment you want to deploy in.</p> <p>Requirements</p> <p>Please see the general requirements at the top of this page and see the <code>compose.yaml</code> file for the versions of the services used.</p> <p>You will also need:</p> <ul> <li>NodeJS for building the client</li> <li>Python &gt;=3.12 for running the API</li> <li>Gunicorn (or similar) as a WSGI with ASGI workers, typically from Uvicorn (see here)</li> <li><code>crontab</code> or something similar for scheduling recurring background jobs</li> </ul> <p>The following steps are just a rough outline of the deployment process:</p> <ol> <li>Install and configure the needed services</li> <li>Configure Tekst following the configuration overview.</li> <li>Copy <code>Tekst-Web/.env</code> to <code>Tekst-Web/.env.production</code></li> <li>Configure the client (Tekst-Web) via the <code>Tekst-Web/.env.production</code> file</li> <li>Build the client: <code>npm run build-only</code></li> <li>Make your web server serves the built client files (in <code>Tekst-Web/dist</code>) at the URL you configured in step 3</li> <li>Copy <code>Tekst-API/.env</code> to <code>Tekst-API/.env.prod</code></li> <li>Configure the server (Tekst-API) via <code>Tekst-API/.env.prod</code></li> <li>Install the Tekst-API project on your system as a Python module (see here)</li> <li>Run the server (Tekst-API) via the WSGI you have installed, using ASGI workers</li> <li>Configure your web server to reverse-proxy requests to the configured server URL + API path to the local port your WSGI server is serving the Tekst API on</li> <li>Tekst needs to run some recurring background jobs to function propertly. Please read about this below!</li> </ol>"},{"location":"setup/installation/#scheduled-jobs","title":"Scheduled jobs","text":"<p>It's a good idea to periodically update the search indices and the precomputed cache (daily is recommended). Also, the internal cleanup routine should be run from time to time. The most obvious way to do this is by using a cron job.</p> <p>The commands Tekst offers as an interface for this are documented in the section about the Tekst-API CLI.</p>"},{"location":"usage/resources/","title":"Resources","text":""},{"location":"usage/resources/#proposal-for-publication","title":"Proposal for publication","text":"<p>By proposing a resource you created for publication, you make it available to all registered users of the platform for them to review your work, comment on it and propose changes or additions. The platform administrators will be informed about your proposal and may publish your resource on the platform to also make it accessible to non-registered users.</p> <p>Resources that are proposed for publication cannot be edited. Also, all shared access permissions for the resource are reset.</p> <p>If a resource is published, the platform administrators gain exclusive control over this resource to prevent any unwanted changes. You can still propose changes to the data of the resource later, but those will have to be approved separately.</p> <p>A publication proposal can be revoked as long as the resource has not been published.</p>"}]}