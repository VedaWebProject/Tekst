{
  "openapi": "3.0.2",
  "info": {
    "title": "TextRig",
    "description": "A great text research platform",
    "termsOfService": "https://my-example-text-research-platform.org/terms",
    "contact": {
      "name": "John Doe",
      "url": "https://my-example-text-research-platform.org/contact",
      "email": "john.doe@my-example-text-research-platform.org"
    },
    "license": {
      "name": "AGPL-3.0-or-later",
      "url": "https://www.gnu.org/licenses/agpl-3.0.txt"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/admin": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Hello Admin",
        "operationId": "hello_admin_admin_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Hello Admin Admin Get",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/layers/plaintext/{layer_id}": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Plaintext Layer",
        "description": "Returns the data for a PlainText data layer",
        "operationId": "Get_PlainText_layer_layers_plaintext__layer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Layer Id",
              "type": "string"
            },
            "name": "layer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayerRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers/plaintext": {
      "post": {
        "tags": [
          "layers"
        ],
        "summary": "Create Plaintext Layer",
        "description": "Creates a PlainText data layer definition",
        "operationId": "Create_PlainText_layer_layers_plaintext_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextLayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayerRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "layers"
        ],
        "summary": "Update Plaintext Layer",
        "description": "Updates the data for a PlainText data layer",
        "operationId": "Update_PlainText_layer_layers_plaintext_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextLayerUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayerRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Layers",
        "operationId": "get_layers_layers_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Slug",
              "type": "string"
            },
            "name": "text_slug",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Level",
              "type": "integer"
            },
            "name": "level",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Layer Type",
              "type": "string"
            },
            "name": "layer_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Layers Layers Get",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers/template": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Layer Template",
        "operationId": "get_layer_template_layers_template_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Layer Id",
              "type": "string"
            },
            "name": "layer_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers/{layer_id}": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Layer",
        "operationId": "get_layer_layers__layer_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Layer Id",
              "type": "string"
            },
            "name": "layer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Nodes",
        "operationId": "get_nodes_nodes_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Slug",
              "type": "string"
            },
            "name": "text_slug",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Level",
              "type": "integer"
            },
            "name": "level",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Index",
              "type": "integer"
            },
            "name": "index",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Parent Id",
              "type": "string"
            },
            "name": "parent_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Nodes Nodes Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeRead"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "nodes"
        ],
        "summary": "Create Node",
        "operationId": "create_node_nodes_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "nodes"
        ],
        "summary": "Update Node",
        "operationId": "update_node_nodes_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes/{node_id}/children": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Children",
        "operationId": "get_children_nodes__node_id__children_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Node Id",
              "type": "string"
            },
            "name": "node_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Children Nodes  Node Id  Children Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NodeRead"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes/{node_id}/next": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Next",
        "operationId": "get_next_nodes__node_id__next_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Node Id",
              "type": "string"
            },
            "name": "node_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get All Texts",
        "operationId": "get_all_texts_texts_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get All Texts Texts Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TextRead"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "texts"
        ],
        "summary": "Create Text",
        "operationId": "create_text_texts_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "texts"
        ],
        "summary": "Update Text",
        "operationId": "update_text_texts_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{text_id}": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get Text By Id",
        "operationId": "get_text_by_id_texts__text_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Id",
              "type": "string"
            },
            "name": "text_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TextRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/uidata": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Data the client needs to display in the UI",
        "description": "Returns all UI data at once",
        "operationId": "uidata_uidata_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidata Uidata Get",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/uidata/platform": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Platform metadata",
        "description": "Returns platform metadata, possibly customized for this platform instance.",
        "operationId": "uidata_platform_uidata_platform_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidata Platform Uidata Platform Get",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/uidata/help": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Help texts",
        "description": "Returns all help texts.",
        "operationId": "uidata_help_uidata_help_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidata Help Uidata Help Get",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/units/plaintext/{unit_id}": {
      "get": {
        "tags": [
          "units"
        ],
        "summary": "Get Plaintext Unit",
        "description": "Returns the data for a PlainText data layer unit",
        "operationId": "Get_PlainText_unit_units_plaintext__unit_id__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Unit Id",
              "type": "string"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnitRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/units/plaintext": {
      "post": {
        "tags": [
          "units"
        ],
        "summary": "Create Plaintext Unit",
        "description": "Creates a PlainText data layer unit",
        "operationId": "Create_PlainText_unit_units_plaintext_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnitRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "units"
        ],
        "summary": "Update Plaintext Unit",
        "description": "Updates the data for a PlainText data layer unit",
        "operationId": "Update_PlainText_unit_units_plaintext_patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextUnitUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnitRead"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeepLLinksConfig": {
        "title": "DeepLLinksConfig",
        "type": "object",
        "properties": {
          "enabled": {
            "title": "Enabled",
            "type": "boolean",
            "description": "Enable/disable quick translation links to DeepL",
            "default": false
          },
          "sourceLanguage": {
            "title": "Sourcelanguage",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ],
            "type": "string",
            "description": "Source language"
          },
          "languages": {
            "title": "Languages",
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "BG",
                "CS",
                "DA",
                "DE",
                "EL",
                "EN",
                "ES",
                "ET",
                "FI",
                "FR",
                "HU",
                "ID",
                "IT",
                "JA",
                "LT",
                "LV",
                "NL",
                "PL",
                "PT",
                "RO",
                "RU",
                "SK",
                "SL",
                "SV",
                "TR",
                "UK",
                "ZH"
              ],
              "type": "string"
            },
            "description": "Target languages to display links for",
            "default": [
              "EN",
              "DE"
            ]
          }
        },
        "description": "Base class for all TextRig models"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Node": {
        "title": "Node",
        "required": [
          "textSlug",
          "level",
          "index",
          "label"
        ],
        "type": "object",
        "properties": {
          "textSlug": {
            "title": "Textslug",
            "type": "string",
            "description": "Slug of the text this node belongs to"
          },
          "parentId": {
            "title": "Parentid",
            "type": "string",
            "description": "ID of parent node"
          },
          "level": {
            "title": "Level",
            "minimum": 0.0,
            "type": "integer",
            "description": "Index of structure level this node is on"
          },
          "index": {
            "title": "Index",
            "minimum": 0.0,
            "type": "integer",
            "description": "Position among all text nodes on this level"
          },
          "label": {
            "title": "Label",
            "type": "string",
            "description": "Label for identifying this text node"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          }
        },
        "description": "A node in a text structure (e.g. chapter, paragraph, ...)"
      },
      "NodeRead": {
        "title": "NodeRead",
        "required": [
          "id",
          "textSlug",
          "level",
          "index",
          "label"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "textSlug": {
            "title": "Textslug",
            "type": "string",
            "description": "Slug of the text this node belongs to"
          },
          "parentId": {
            "title": "Parentid",
            "type": "string",
            "description": "ID of parent node"
          },
          "level": {
            "title": "Level",
            "minimum": 0.0,
            "type": "integer",
            "description": "Index of structure level this node is on"
          },
          "index": {
            "title": "Index",
            "minimum": 0.0,
            "type": "integer",
            "description": "Position among all text nodes on this level"
          },
          "label": {
            "title": "Label",
            "type": "string",
            "description": "Label for identifying this text node"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          }
        },
        "description": "An existing node read from the database"
      },
      "NodeUpdate": {
        "title": "NodeUpdate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "textSlug": {
            "title": "Textslug",
            "type": "string"
          },
          "parentId": {
            "title": "Parentid",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          },
          "index": {
            "title": "Index",
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        },
        "description": "An update to an existing node"
      },
      "PlainTextLayer": {
        "title": "PlainTextLayer",
        "required": [
          "title",
          "textSlug",
          "level",
          "layerType"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this layer"
          },
          "description": {
            "title": "Description",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Short, one-line description of this data layer"
          },
          "textSlug": {
            "title": "Textslug",
            "type": "string",
            "description": "Slug of the text this layer belongs to"
          },
          "level": {
            "title": "Level",
            "type": "integer",
            "description": "Text level this layer belongs to"
          },
          "layerType": {
            "title": "Layertype",
            "type": "string",
            "description": "A string identifying one of the available layer types"
          },
          "public": {
            "title": "Public",
            "type": "boolean",
            "description": "Publication status of this layer",
            "default": false
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          },
          "config": {
            "title": "Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlainTextLayerConfig"
              }
            ],
            "default": {}
          }
        },
        "description": "A data layer describing a set of data on a text"
      },
      "PlainTextLayerConfig": {
        "title": "PlainTextLayerConfig",
        "type": "object",
        "properties": {
          "deeplLinks": {
            "title": "Deepllinks",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeepLLinksConfig"
              }
            ],
            "default": {}
          }
        },
        "description": "Base class for all TextRig models"
      },
      "PlainTextLayerRead": {
        "title": "PlainTextLayerRead",
        "required": [
          "id",
          "title",
          "textSlug",
          "level",
          "layerType"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this layer"
          },
          "description": {
            "title": "Description",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Short, one-line description of this data layer"
          },
          "textSlug": {
            "title": "Textslug",
            "type": "string",
            "description": "Slug of the text this layer belongs to"
          },
          "level": {
            "title": "Level",
            "type": "integer",
            "description": "Text level this layer belongs to"
          },
          "layerType": {
            "title": "Layertype",
            "type": "string",
            "description": "A string identifying one of the available layer types"
          },
          "public": {
            "title": "Public",
            "type": "boolean",
            "description": "Publication status of this layer",
            "default": false
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          },
          "config": {
            "title": "Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlainTextLayerConfig"
              }
            ],
            "default": {}
          }
        },
        "description": "An existing data layer read from the database"
      },
      "PlainTextLayerUpdate": {
        "title": "PlainTextLayerUpdate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "textSlug": {
            "title": "Textslug",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          },
          "layerType": {
            "title": "Layertype",
            "type": "string"
          },
          "public": {
            "title": "Public",
            "type": "boolean"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "config": {
            "$ref": "#/components/schemas/PlainTextLayerConfig"
          }
        },
        "description": "An update to an existing data layer"
      },
      "PlainTextUnit": {
        "title": "PlainTextUnit",
        "required": [
          "layerId",
          "nodeId"
        ],
        "type": "object",
        "properties": {
          "layerId": {
            "title": "Layerid",
            "type": "string",
            "description": "Data layer ID"
          },
          "nodeId": {
            "title": "Nodeid",
            "type": "string",
            "description": "Parent text node ID"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata on this layer unit",
            "extra": {
              "template": true
            }
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "Text content of the plaintext unit",
            "extra": {
              "template": true
            }
          }
        },
        "description": "A unit of a plaintext data layer"
      },
      "PlainTextUnitRead": {
        "title": "PlainTextUnitRead",
        "required": [
          "id",
          "layerId",
          "nodeId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "layerId": {
            "title": "Layerid",
            "type": "string",
            "description": "Data layer ID"
          },
          "nodeId": {
            "title": "Nodeid",
            "type": "string",
            "description": "Parent text node ID"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata on this layer unit",
            "extra": {
              "template": true
            }
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "Text content of the plaintext unit",
            "extra": {
              "template": true
            }
          }
        },
        "description": "A unit of a plaintext data layer"
      },
      "PlainTextUnitUpdate": {
        "title": "PlainTextUnitUpdate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "layerId": {
            "title": "Layerid",
            "type": "string"
          },
          "nodeId": {
            "title": "Nodeid",
            "type": "string"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "description": "A unit of a plaintext data layer"
      },
      "Text": {
        "title": "Text",
        "required": [
          "title",
          "levels"
        ],
        "type": "object",
        "properties": {
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this text"
          },
          "slug": {
            "title": "Slug",
            "maxLength": 16,
            "minLength": 2,
            "pattern": "^[a-z][a-z0-9\\-_]{0,14}[a-z0-9]$",
            "type": "string",
            "description": "A short identifier string for use in URLs and internal operations (will be generated automatically if missing)"
          },
          "subtitle": {
            "title": "Subtitle",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Subtitle of this text"
          },
          "levels": {
            "title": "Levels",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locDelim": {
            "title": "Locdelim",
            "type": "string",
            "description": "Delimiter for displaying text locations",
            "default": ","
          }
        },
        "description": "A text represented in TextRig"
      },
      "TextRead": {
        "title": "TextRead",
        "required": [
          "id",
          "title",
          "levels"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this text"
          },
          "slug": {
            "title": "Slug",
            "maxLength": 16,
            "minLength": 2,
            "pattern": "^[a-z][a-z0-9\\-_]{0,14}[a-z0-9]$",
            "type": "string",
            "description": "A short identifier string for use in URLs and internal operations (will be generated automatically if missing)"
          },
          "subtitle": {
            "title": "Subtitle",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Subtitle of this text"
          },
          "levels": {
            "title": "Levels",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locDelim": {
            "title": "Locdelim",
            "type": "string",
            "description": "Delimiter for displaying text locations",
            "default": ","
          }
        },
        "description": "An existing text read from the database"
      },
      "TextUpdate": {
        "title": "TextUpdate",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "subtitle": {
            "title": "Subtitle",
            "type": "string"
          },
          "levels": {
            "title": "Levels",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locDelim": {
            "title": "Locdelim",
            "type": "string"
          }
        },
        "description": "An update to an existing text"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}