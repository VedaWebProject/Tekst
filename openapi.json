{
  "openapi": "3.0.2",
  "info": {
    "title": "TextRig",
    "description": "A text research platform",
    "termsOfService": "https://my-example-text-research-platform.org/terms",
    "contact": {
      "name": "John Doe",
      "url": "https://my-example-text-research-platform.org/contact",
      "email": "john.doe@my-example-text-research-platform.org"
    },
    "license": {
      "name": "AGPL-3.0-or-later",
      "url": "https://www.gnu.org/licenses/agpl-3.0.txt"
    },
    "version": "0.0.1"
  },
  "paths": {
    "/admin": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Hello Admin",
        "operationId": "helloAdmin",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Helloadmin",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/layers/plaintext/{layer_id}": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Plaintext Layer",
        "description": "Returns the data for a PlainText data layer",
        "operationId": "getPlaintextLayer",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Layer Id",
              "type": "string"
            },
            "name": "layer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers/plaintext": {
      "post": {
        "tags": [
          "layers"
        ],
        "summary": "Create Plaintext Layer",
        "description": "Creates a PlainText data layer definition",
        "operationId": "createPlaintextLayer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextLayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "layers"
        ],
        "summary": "Update Plaintext Layer",
        "description": "Updates the data for a PlainText data layer",
        "operationId": "updatePlaintextLayer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextLayerUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextLayer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Layers",
        "operationId": "getLayers",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Slug",
              "type": "string"
            },
            "name": "text_slug",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Level",
              "type": "integer"
            },
            "name": "level",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Layer Type",
              "type": "string"
            },
            "name": "layer_type",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getlayers",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/layers/{layer_id}": {
      "get": {
        "tags": [
          "layers"
        ],
        "summary": "Get Layer",
        "operationId": "getLayer",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Layer Id",
              "type": "string"
            },
            "name": "layer_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getlayer",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Nodes",
        "operationId": "getNodes",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Slug",
              "type": "string"
            },
            "name": "text_slug",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Level",
              "type": "integer"
            },
            "name": "level",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Index",
              "type": "integer"
            },
            "name": "index",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Parent Id",
              "type": "string",
              "examples": [
                "5eb7cf5a86d9755df3a6c593",
                "5eb7cfb05e32e07750a1756a"
              ]
            },
            "name": "parent_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getnodes",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Node"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "nodes"
        ],
        "summary": "Create Node",
        "operationId": "createNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Node"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "nodes"
        ],
        "summary": "Update Node",
        "operationId": "updateNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes/{node_id}/children": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Children",
        "operationId": "getChildren",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Node Id",
              "type": "string",
              "examples": [
                "5eb7cf5a86d9755df3a6c593",
                "5eb7cfb05e32e07750a1756a"
              ]
            },
            "name": "node_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 1000
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getchildren",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Node"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/nodes/{node_id}/next": {
      "get": {
        "tags": [
          "nodes"
        ],
        "summary": "Get Next",
        "operationId": "getNext",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Node Id",
              "type": "string"
            },
            "name": "node_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Node"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get All Texts",
        "operationId": "getAllTexts",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "default": 100
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Getalltexts",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Text"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "texts"
        ],
        "summary": "Create Text",
        "operationId": "createText",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "texts"
        ],
        "summary": "Update Text",
        "operationId": "updateText",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/texts/{text_id}": {
      "get": {
        "tags": [
          "texts"
        ],
        "summary": "Get Text By Id",
        "operationId": "getTextById",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Text Id",
              "type": "string"
            },
            "name": "text_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Text"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/uidata": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Data the client needs to display in the UI",
        "description": "Returns data the client needs to initialize",
        "operationId": "uidata",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidata",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/uidata/platform": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Platform metadata",
        "description": "Returns platform metadata, possibly customized for this platform instance.",
        "operationId": "uidataPlatform",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidataplatform",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/uidata/i18n": {
      "get": {
        "tags": [
          "uidata"
        ],
        "summary": "Get server-managed translations",
        "description": "Returns server-managed translations.",
        "operationId": "uidataI18n",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Lang",
              "type": "string"
            },
            "name": "lang",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Uidatai18N",
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/units/plaintext/{unit_id}": {
      "get": {
        "tags": [
          "units"
        ],
        "summary": "Get Plaintext Unit",
        "description": "Returns the data for a PlainText data layer unit",
        "operationId": "getPlaintextUnit",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Unit Id",
              "type": "string"
            },
            "name": "unit_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnit"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/units/plaintext": {
      "post": {
        "tags": [
          "units"
        ],
        "summary": "Create Plaintext Unit",
        "description": "Creates a PlainText data layer unit",
        "operationId": "createPlaintextUnit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnit"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "units"
        ],
        "summary": "Update Plaintext Unit",
        "description": "Updates the data for a PlainText data layer unit",
        "operationId": "updatePlaintextUnit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlainTextUnitUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlainTextUnit"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DeepLLinksConfig": {
        "title": "DeepLLinksConfig",
        "type": "object",
        "properties": {
          "enabled": {
            "title": "Enabled",
            "type": "boolean",
            "description": "Enable/disable quick translation links to DeepL",
            "default": false
          },
          "source_language": {
            "title": "Source Language",
            "enum": [
              "BG",
              "CS",
              "DA",
              "DE",
              "EL",
              "EN",
              "ES",
              "ET",
              "FI",
              "FR",
              "HU",
              "ID",
              "IT",
              "JA",
              "LT",
              "LV",
              "NL",
              "PL",
              "PT",
              "RO",
              "RU",
              "SK",
              "SL",
              "SV",
              "TR",
              "UK",
              "ZH"
            ],
            "type": "string",
            "description": "Source language"
          },
          "languages": {
            "title": "Languages",
            "type": "array",
            "items": {
              "enum": [
                "BG",
                "CS",
                "DA",
                "DE",
                "EL",
                "EN",
                "ES",
                "ET",
                "FI",
                "FR",
                "HU",
                "ID",
                "IT",
                "JA",
                "LT",
                "LV",
                "NL",
                "PL",
                "PT",
                "RO",
                "RU",
                "SK",
                "SL",
                "SV",
                "TR",
                "UK",
                "ZH"
              ],
              "type": "string"
            },
            "description": "Target languages to display links for",
            "default": [
              "EN",
              "DE"
            ]
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Node": {
        "title": "Node",
        "required": [
          "text_slug",
          "level",
          "index",
          "label"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "text_slug": {
            "title": "Text Slug",
            "type": "string",
            "description": "Slug of the text this node belongs to"
          },
          "parent_id": {
            "title": "Parent Id",
            "type": "string",
            "description": "ID of parent node",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "level": {
            "title": "Level",
            "minimum": 0.0,
            "type": "integer",
            "description": "Index of structure level this node is on"
          },
          "index": {
            "title": "Index",
            "minimum": 0.0,
            "type": "integer",
            "description": "Position among all text nodes on this level"
          },
          "label": {
            "title": "Label",
            "type": "string",
            "description": "Label for identifying this text node"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          }
        },
        "description": "A node in a text structure (e.g. chapter, paragraph, ...)"
      },
      "NodeUpdate": {
        "title": "NodeUpdate",
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "text_slug": {
            "title": "Text Slug",
            "type": "string"
          },
          "parent_id": {
            "title": "Parent Id",
            "type": "string",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "level": {
            "title": "Level",
            "type": "integer"
          },
          "index": {
            "title": "Index",
            "type": "integer"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          }
        },
        "description": "An update to an existing node"
      },
      "PlainTextLayer": {
        "title": "PlainTextLayer",
        "required": [
          "title",
          "text_slug",
          "level",
          "layer_type"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this layer"
          },
          "description": {
            "title": "Description",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Short, one-line description of this data layer"
          },
          "text_slug": {
            "title": "Text Slug",
            "type": "string",
            "description": "Slug of the text this layer belongs to"
          },
          "level": {
            "title": "Level",
            "type": "integer",
            "description": "Text level this layer belongs to"
          },
          "layer_type": {
            "title": "Layer Type",
            "type": "string",
            "description": "A string identifying one of the available layer types"
          },
          "public": {
            "title": "Public",
            "type": "boolean",
            "description": "Publication status of this layer",
            "default": false
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata"
          },
          "config": {
            "title": "Config",
            "allOf": [
              {
                "$ref": "#/components/schemas/PlainTextLayerConfig"
              }
            ],
            "default": {
              "deepl_links": {
                "enabled": false,
                "languages": [
                  "EN",
                  "DE"
                ]
              }
            }
          }
        },
        "description": "A data layer describing a set of data on a text"
      },
      "PlainTextLayerConfig": {
        "title": "PlainTextLayerConfig",
        "type": "object",
        "properties": {
          "deepl_links": {
            "title": "Deepl Links",
            "allOf": [
              {
                "$ref": "#/components/schemas/DeepLLinksConfig"
              }
            ],
            "default": {
              "enabled": false,
              "languages": [
                "EN",
                "DE"
              ]
            }
          }
        }
      },
      "PlainTextLayerUpdate": {
        "title": "PlainTextLayerUpdate",
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "text_slug": {
            "title": "Text Slug",
            "type": "string"
          },
          "level": {
            "title": "Level",
            "type": "integer"
          },
          "layer_type": {
            "title": "Layer Type",
            "type": "string"
          },
          "public": {
            "title": "Public",
            "type": "boolean"
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "config": {
            "$ref": "#/components/schemas/PlainTextLayerConfig"
          }
        },
        "description": "An update to an existing data layer"
      },
      "PlainTextUnit": {
        "title": "PlainTextUnit",
        "required": [
          "layer_id",
          "node_id"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "layer_id": {
            "title": "Layer Id",
            "type": "string",
            "description": "Data layer ID",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "node_id": {
            "title": "Node Id",
            "type": "string",
            "description": "Parent text node ID",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            },
            "description": "Arbitrary metadata on this layer unit",
            "extra": {
              "template": true
            }
          },
          "text": {
            "title": "Text",
            "type": "string",
            "description": "Text content of the plaintext unit",
            "extra": {
              "template": true
            }
          }
        },
        "description": "A unit of a plaintext data layer"
      },
      "PlainTextUnitUpdate": {
        "title": "PlainTextUnitUpdate",
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "layer_id": {
            "title": "Layer Id",
            "type": "string",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "node_id": {
            "title": "Node Id",
            "type": "string",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "meta": {
            "title": "Meta",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                }
              ]
            }
          },
          "text": {
            "title": "Text",
            "type": "string"
          }
        },
        "description": "A unit of a plaintext data layer"
      },
      "Text": {
        "title": "Text",
        "required": [
          "title",
          "slug",
          "levels"
        ],
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "title": {
            "title": "Title",
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Title of this text"
          },
          "slug": {
            "title": "Slug",
            "maxLength": 16,
            "minLength": 2,
            "pattern": "^[a-z][a-z0-9\\-_]{0,14}[a-z0-9]$",
            "type": "string",
            "description": "A short identifier string for use in URLs and internal operations"
          },
          "subtitle": {
            "title": "Subtitle",
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Subtitle of this text"
          },
          "levels": {
            "title": "Levels",
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "loc_delim": {
            "title": "Loc Delim",
            "type": "string",
            "description": "Delimiter for displaying text locations",
            "default": ","
          }
        },
        "description": "A text represented in TextRig"
      },
      "TextUpdate": {
        "title": "TextUpdate",
        "type": "object",
        "properties": {
          "_id": {
            "title": " Id",
            "type": "string",
            "description": "ID of this object",
            "examples": [
              "5eb7cf5a86d9755df3a6c593",
              "5eb7cfb05e32e07750a1756a"
            ]
          },
          "revision_id": {
            "title": "Revision Id",
            "type": "string",
            "format": "uuid",
            "hidden": true
          },
          "title": {
            "title": "Title",
            "type": "string"
          },
          "slug": {
            "title": "Slug",
            "type": "string"
          },
          "subtitle": {
            "title": "Subtitle",
            "type": "string"
          },
          "levels": {
            "title": "Levels",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "loc_delim": {
            "title": "Loc Delim",
            "type": "string"
          }
        },
        "description": "An update to an existing text"
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}